<?xml version="1.0" encoding="UTF-8"?><queryservice xmlns="http://www.anyframejava.org/schema/query/mapping"	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"	xsi:schemaLocation="http://www.anyframejava.org/schema/query/mapping http://www.anyframejava.org/schema/query/anyframe-query-mapping-1.0.xsd ">		<queries><!--  발송 start -->		<query id="enforceSend.insertSendProc">			<!-- 발송처리이력-->			<statement>			<![CDATA[				INSERT INTO TGW_SEND_PROC ( DOC_ID, COMP_ID, PROC_ORDER, PROC_TYPE, PROCESSOR_ID, PROCESSOR_NAME, PROCESS_DATE, PROC_OPINION )				VALUES (   :vo.docId,				           :vo.compId,				           NVL((SELECT MAX(PROC_ORDER) FROM TGW_SEND_PROC WHERE DOC_ID = :vo.docId AND COMP_ID = :vo.compId ),0) + 1,  				           :vo.procType,				           :vo.processorId,				           :vo.processorName, 				           TO_DATE(:vo.processDate,'YYYY-MM-DD HH24:MI:SS' ),				           :vo.procOpinion )			]]>			</statement>		</query>	                <query id="enforceSend.updateAppRecv">			<!-- 생산문서 수신자 정보 업데이트 (발송)-->            <statement>            <![CDATA[				UPDATE TGW_APP_RECV SET  				       SENDER_ID       	= :vo.senderId,				       SENDER_NAME     	= :vo.senderName,				       SEND_DATE       	= TO_DATE(:vo.sendDate,'YYYY-MM-DD HH24:MI:SS' ),				       ENF_STATE       	= :vo.enfState,					   ACCEPTER_ID 		= '',					   ACCEPTER_NAME	= '',					   ACCEPTER_POS 	= '',					   ACCEPT_DEPT_ID	= '',					   ACCEPT_DEPT_NAME = '',					   ACCEPT_DATE 		= TO_DATE('9999-12-31 23:59:59','YYYY-MM-DD HH24:MI:SS'),					   CHARGER_ID 		= '',					   CHARGER_NAME	 	= '',					   CHARGER_POS 		= '',					   CHARGE_DEPT_ID 	= '',					   CHARGE_DEPT_NAME = '',					   CHARGE_PROC_DATE = TO_DATE('9999-12-31 23:59:59','YYYY-MM-DD HH24:MI:SS'),				       SEND_OPINION    	= ''				WHERE  DOC_ID = :vo.docId				AND    COMP_ID = :vo.compId            ]]>            </statement>        </query>                <query id="enforceSend.insertEnfRecv">			<!-- 접수문서수신자정보 -->            <statement>            <![CDATA[				INSERT INTO TGW_ENF_RECV ( RECEIVER_ORDER, RECEIVER_TYPE, ENF_TYPE, RECV_COMP_ID, RECV_DEPT_ID, RECV_DEPT_NAME, REF_DEPT_ID, 				            REF_DEPT_NAME, RECV_USER_ID, RECV_USER_NAME, RECV_SYMBOL, DOC_ID, COMP_ID, REGIST_DATE, 				            RECV_STATE, READ_DATE )				SELECT RECEIVER_ORDER, RECEIVER_TYPE, ENF_TYPE, RECV_COMP_ID, RECV_DEPT_ID, RECV_DEPT_NAME, REF_DEPT_ID, 				       REF_DEPT_NAME, RECV_USER_ID, RECV_USER_NAME, RECV_SYMBOL, 'ENF' || SUBSTR(DOC_ID,4), COMP_ID, REGIST_DATE, 				       DECODE(ENF_TYPE,'DET003','ENF100','ENF200'), TO_DATE('9999-12-31 23:59:59','YYYY-MM-DD HH24:MI:SS') 				FROM   TGW_APP_RECV				WHERE  DOC_ID = :vo.docId				AND    COMP_ID = :vo.compId				AND    ENF_TYPE NOT IN ('DET005','DET006','DET007','DET011')            ]]>            </statement>        </query> 		<query id="enforceSend.insertEnfDoc">			<!-- 접수문서정보 -->            <statement>            <![CDATA[				INSERT INTO TGW_ENF_DOC ( DOC_ID, COMP_ID, ORIGIN_COMP_ID, ORIGIN_DOC_ID, ENF_TYPE, TITLE, DOC_STATE, DOC_NUMBER, SERIAL_NUMBER,				       ACCEPT_DATE, READ_RANGE, CONSERVE_TYPE, RECEIVE_DATE, 					   DISTRIBUTE_YN,DISTRIBUTE_DATE, ELECTRON_DOC_YN, ATTACH_COUNT, DELETE_YN, URGENCY_YN, PUBLIC_POST, 					   HANDOVER_YN, MOBILE_YN, TRANSFER_YN, SENDER_ID, SENDER_NAME, 					   SEND_DATE, SEND_OPINION, SENDER_POS, SENDER_DEPT_ID, SENDER_DEPT_NAME, SENDER_COMP_ID, SENDER_COMP_NAME,					   OPEN_LEVEL, OPEN_REASON, REGISTER_ID, REGISTER_NAME, REGIST_DATE, LAST_UPDATE_DATE, DOC_TYPE, UNREGIST_YN,					   ASSISTANT_LINE_TYPE, AUDIT_LINE_TYPE ) 			    SELECT 'ENF' || SUBSTR(DOC_ID,4), COMP_ID, COMP_ID, DOC_ID, ENF_TYPE, TITLE,  DECODE(ENF_TYPE,'DET003','ENF100','ENF200'), DECODE(SERIAL_NUMBER,0,'',DEPT_CATEGORY || '-' || SERIAL_NUMBER) , DECODE(SERIAL_NUMBER,0,-1,0),			     	   TO_DATE('9999-12-31 23:59:59','YYYY-MM-DD HH24:MI:SS'), 'DRS002', CONSERVE_TYPE, TO_DATE(:vo.sendDate,'YYYY-MM-DD HH24:MI:SS'), 			           DECODE(ENF_TYPE,'DET002','N','T'), TO_DATE('9999-12-31 23:59:59','YYYY-MM-DD HH24:MI:SS'), 'Y', ATTACH_COUNT, DELETE_YN, URGENCY_YN, '',			           'N','N','N', :vo.senderId, :vo.senderName, 			           TO_DATE(:vo.sendDate,'YYYY-MM-DD HH24:MI:SS'), :vo.sendOpinion, :vo.senderPos, :vo.senderDeptId, :vo.senderDeptName, :vo.senderCompId, :vo.senderCompName,			           OPEN_LEVEL, OPEN_REASON, :vo.senderId, :vo.senderName, 			           TO_DATE(:vo.sendDate,'YYYY-MM-DD HH24:MI:SS'), TO_DATE(:vo.sendDate,'YYYY-MM-DD HH24:MI:SS'), DOC_TYPE, 'N',			           ASSISTANT_LINE_TYPE, AUDIT_LINE_TYPE				FROM   TGW_APP_DOC				WHERE  DOC_ID = :vo.originDocId				AND    COMP_ID = :vo.compId				AND   0 < (SELECT COUNT(DOC_ID)							FROM   TGW_APP_RECV							WHERE  DOC_ID = :vo.docId							AND    COMP_ID = :vo.compId							AND    ENF_TYPE NOT IN ('DET005','DET006','DET007','DET011') )            ]]>            </statement>        </query> 		<query id="enforceSend.updateStampSendDate">			<!-- 관인날인대장 시행시 시행일자 업데이트 -->            <statement>            <![CDATA[				UPDATE TGW_STAMP_LIST SET 					   ENFORCE_DATE = TO_DATE(:vo.enforceDate,'YYYY-MM-DD HH24:MI:SS')				WHERE  DOC_ID = :vo.docId				AND    COMP_ID = :vo.compId             ]]>            </statement>        </query> 		<query id="enforceSend.insertEnfFileInfo">			<!-- 접수파일정보저장 -->            <statement>            <![CDATA[				INSERT INTO TGW_FILE_INFO ( DOC_ID, COMP_ID, PROCESSOR_ID, TEMP_YN, FILE_ID, FILE_NAME, DISPLAY_NAME, FILE_TYPE, FILE_SIZE, 							IMAGE_WIDTH, IMAGE_HEIGHT, FILE_ORDER, REGISTER_ID, REGISTER_NAME, REGIST_DATE ) 				SELECT  'ENF' || SUBSTR(DOC_ID,4), COMP_ID, PROCESSOR_ID, TEMP_YN, FILE_ID, FILE_NAME, DISPLAY_NAME, FILE_TYPE, FILE_SIZE, 						IMAGE_WIDTH, IMAGE_HEIGHT, FILE_ORDER, REGISTER_ID, REGISTER_NAME, REGIST_DATE 				FROM 	TGW_FILE_INFO				WHERE  DOC_ID = :vo.docId				AND    COMP_ID = :vo.compId				AND   0 < (	SELECT COUNT(DOC_ID)							FROM   TGW_APP_RECV							WHERE  DOC_ID = :vo.docId							AND    COMP_ID = :vo.compId							AND    ENF_TYPE NOT IN ('DET005','DET006','DET007','DET011') )             ]]>            </statement>        </query><!--  발송 end --><!-- 문서이력정보 저장 start --> 		<query id="enforceSend.insertDocHis">			<!--문서이력정보저장 -->            <statement>            <![CDATA[				INSERT INTO TGW_DOC_HIS ( DOC_ID, COMP_ID, HIS_ID, USER_ID, USER_NAME, POS, USER_IP, DEPT_ID, DEPT_NAME, USED_TYPE, 				USE_DATE, REMARK) 				SELECT :vo.docId, :vo.compId, :vo.hisId, :vo.userId, :vo.userName, :vo.pos, :vo.userIp, :vo.deptId, :vo.deptName, :vo.usedType,				TO_DATE(:vo.useDate,'YYYY-MM-DD HH24:MI:SS'), :vo.remark				FROM DUAL             ]]>            </statement>        </query><!-- 문서이력정보 저장 end --><!-- 파일이력정보 저장 start --> 		<query id="enforceSend.insertFileHis">			<!--문서이력정보저장 -->            <statement>            <![CDATA[				INSERT INTO TGW_FILE_INFO_HIS ( FILE_HIS_ID, DOC_ID, COMP_ID, FILE_ID, FILE_NAME, DISPLAY_NAME, FILE_TYPE, FILE_SIZE, 				IMAGE_WIDTH, IMAGE_HEIGHT, FILE_ORDER, REGISTER_ID, REGISTER_NAME, REGIST_DATE ) 				SELECT :vo.fileHisId, :vo.docId, :vo.compId, FILE_ID, FILE_NAME, DISPLAY_NAME, FILE_TYPE, FILE_SIZE, 				IMAGE_WIDTH, IMAGE_HEIGHT, FILE_ORDER, REGISTER_ID, REGISTER_NAME, REGIST_DATE				FROM  TGW_FILE_INFO				WHERE  DOC_ID = :vo.docId				AND    COMP_ID = :vo.compId				AND    FILE_TYPE = 'AFT001'             ]]>            </statement>        </query><!-- 파일이력정보 저장 end --><!--  발송종료 start -->	                <query id="enforceSend.updateAppRecvStopSend">			<!-- 생산문서 수신자 정보 업데이트 (발송종료)-->            <statement>            <![CDATA[				UPDATE TGW_APP_RECV SET  				       ENF_STATE       	= :vo.enfState				WHERE  DOC_ID = :vo.docId				AND    COMP_ID = :vo.compId				AND    RECEIVER_ORDER in ( {{ vo.recvOrderList }} )              ]]>            </statement>        </query><!--  재발송/추가발송 start -->	                <query id="enforceSend.updateAppRecvReSend">			<!-- 생산문서 수신자 정보 업데이트 (재발송)-->            <statement>            <![CDATA[				UPDATE TGW_APP_RECV SET  				       SENDER_ID       	= :vo.senderId,				       SENDER_NAME     	= :vo.senderName,				       SEND_DATE       	= TO_DATE(:vo.sendDate,'YYYY-MM-DD HH24:MI:SS' ),				       ENF_STATE       	= :vo.enfState,					   ACCEPTER_ID 		= '',					   ACCEPTER_NAME	= '',					   ACCEPTER_POS 	= '',					   ACCEPT_DEPT_ID	= '',					   ACCEPT_DEPT_NAME = '',					   ACCEPT_DATE 		= TO_DATE('9999-12-31 23:59:59','YYYY-MM-DD HH24:MI:SS'),					   RECEIVE_DATE 	= TO_DATE('9999-12-31 23:59:59','YYYY-MM-DD HH24:MI:SS'),					   CHARGER_ID 		= '',					   CHARGER_NAME	 	= '',					   CHARGER_POS 		= '',					   CHARGE_DEPT_ID 	= '',					   CHARGE_DEPT_NAME = '',					   CHARGE_PROC_DATE = TO_DATE('9999-12-31 23:59:59','YYYY-MM-DD HH24:MI:SS'),				       SEND_OPINION    	= ''				WHERE  DOC_ID = :vo.docId				AND    COMP_ID = :vo.compId				AND    RECEIVER_ORDER in ( {{ vo.recvOrderList }} )              ]]>            </statement>        </query>                <query id="enforceSend.insertEnfRecvReSend">			<!-- 접수문서수신자정보 -->            <statement>            <![CDATA[				INSERT INTO TGW_ENF_RECV ( RECEIVER_ORDER, RECEIVER_TYPE, ENF_TYPE, RECV_COMP_ID, RECV_DEPT_ID, RECV_DEPT_NAME, REF_DEPT_ID, 				            REF_DEPT_NAME, RECV_USER_ID, RECV_USER_NAME, RECV_SYMBOL, DOC_ID, COMP_ID, REGIST_DATE, 				            RECV_STATE, READ_DATE )				SELECT RECEIVER_ORDER, RECEIVER_TYPE, ENF_TYPE, RECV_COMP_ID, RECV_DEPT_ID, RECV_DEPT_NAME, REF_DEPT_ID, 				       REF_DEPT_NAME, RECV_USER_ID, RECV_USER_NAME, RECV_SYMBOL, 'ENF' || SUBSTR(DOC_ID,4), COMP_ID, REGIST_DATE, 				       DECODE(ENF_TYPE,'DET003','ENF100','ENF200'), TO_DATE('9999-12-31 23:59:59','YYYY-MM-DD HH24:MI:SS') 				FROM   TGW_APP_RECV				WHERE  DOC_ID = :vo.docId				AND    COMP_ID = :vo.compId				AND    ENF_TYPE NOT IN ('DET005','DET006','DET007','DET011')				AND    RECEIVER_ORDER in ( {{ vo.recvOrderList }} )            ]]>            </statement>        </query> 		<query id="enforceSend.insertEnfDocReSend">			<!-- 접수문서정보 -->            <statement>            <![CDATA[				INSERT INTO TGW_ENF_DOC ( DOC_ID, COMP_ID, ORIGIN_COMP_ID, ORIGIN_DOC_ID, ENF_TYPE, TITLE, DOC_STATE, DOC_NUMBER, SERIAL_NUMBER,				       ACCEPT_DATE, READ_RANGE, CONSERVE_TYPE, RECEIVE_DATE, 					   DISTRIBUTE_YN,DISTRIBUTE_DATE, ELECTRON_DOC_YN, ATTACH_COUNT, DELETE_YN, URGENCY_YN, PUBLIC_POST, 					   HANDOVER_YN, MOBILE_YN, TRANSFER_YN, SENDER_ID, SENDER_NAME, 					   SEND_DATE, SEND_OPINION, SENDER_POS, SENDER_DEPT_ID, SENDER_DEPT_NAME, SENDER_COMP_ID, SENDER_COMP_NAME,					   OPEN_LEVEL, OPEN_REASON , REGISTER_ID, REGISTER_NAME, REGIST_DATE, LAST_UPDATE_DATE, DOC_TYPE, UNREGIST_YN,					   ASSISTANT_LINE_TYPE, AUDIT_LINE_TYPE  ) 			    SELECT 'ENF' || SUBSTR(DOC_ID,4), COMP_ID, COMP_ID, DOC_ID, ENF_TYPE, TITLE,  DECODE(ENF_TYPE,'DET003','ENF100','ENF200'), DECODE(SERIAL_NUMBER,0,'',DEPT_CATEGORY || '-' || SERIAL_NUMBER) , DECODE(SERIAL_NUMBER,0,-1,0),			     		TO_DATE('9999-12-31 23:59:59','YYYY-MM-DD HH24:MI:SS'), 'DRS002', CONSERVE_TYPE, TO_DATE(:vo.sendDate,'YYYY-MM-DD HH24:MI:SS'), 			           DECODE(ENF_TYPE,'DET002','N','T'), TO_DATE('9999-12-31 23:59:59','YYYY-MM-DD HH24:MI:SS'), 'Y', ATTACH_COUNT, DELETE_YN, URGENCY_YN, 'N',			           'N','N','N', :vo.senderId, :vo.senderName, 			           TO_DATE(:vo.sendDate,'YYYY-MM-DD HH24:MI:SS'), :vo.sendOpinion, :vo.senderPos, :vo.senderDeptId, :vo.senderDeptName, :vo.senderCompId, :vo.senderCompName,			           OPEN_LEVEL, OPEN_REASON, :vo.senderId, :vo.senderName, TO_DATE(:vo.sendDate,'YYYY-MM-DD HH24:MI:SS'), TO_DATE(:vo.sendDate,'YYYY-MM-DD HH24:MI:SS'), DOC_TYPE, 'N',			           ASSISTANT_LINE_TYPE, AUDIT_LINE_TYPE				FROM   TGW_APP_DOC				WHERE  DOC_ID = :vo.originDocId				AND    COMP_ID = :vo.compId				AND    ENF_TYPE NOT IN ('DET005','DET006','DET007','DET011')				AND    1 > (SELECT COUNT( DOC_ID )	                        FROM   TGW_ENF_DOC							WHERE  DOC_ID = 'ENF' || SUBSTR(:vo.docId,4)							AND    COMP_ID = :vo.compId  )            ]]>            </statement>        </query> 		<query id="enforceSend.deleteEnfFileInfoReSend">			<!-- 재발송을 위한 접수파일정보 삭제 -->            <statement>            <![CDATA[				DELETE FROM TGW_FILE_INFO				WHERE  DOC_ID = 'ENF' || SUBSTR(:vo.docId,4)				AND    COMP_ID = :vo.compId             ]]>            </statement>        </query> 		<query id="enforceSend.insertEnfFileInfoReSend">			<!-- 재발송 접수파일정보 저장 -->            <statement>            <![CDATA[				INSERT INTO TGW_FILE_INFO ( DOC_ID, COMP_ID, PROCESSOR_ID, TEMP_YN, FILE_ID, FILE_NAME, DISPLAY_NAME, FILE_TYPE, FILE_SIZE, 							IMAGE_WIDTH, IMAGE_HEIGHT, FILE_ORDER, REGISTER_ID, REGISTER_NAME, REGIST_DATE ) 				SELECT  'ENF' || SUBSTR(DOC_ID,4), COMP_ID, PROCESSOR_ID, TEMP_YN, FILE_ID, FILE_NAME, DISPLAY_NAME, FILE_TYPE, FILE_SIZE, 						IMAGE_WIDTH, IMAGE_HEIGHT, FILE_ORDER, REGISTER_ID, REGISTER_NAME, REGIST_DATE 				FROM 	TGW_FILE_INFO				WHERE  DOC_ID = :vo.docId				AND    COMP_ID = :vo.compId				AND    1 > (SELECT COUNT( DOC_ID )	                        FROM   TGW_FILE_INFO							WHERE  DOC_ID = 'ENF' || SUBSTR(:vo.docId,4)							AND    COMP_ID = :vo.compId  )             ]]>            </statement>        </query>		<query id="appcom.updateSendInfoAppendSend">		<!-- 발송정보 수신자목록/시행일자 업데이트 -->			<statement>			<![CDATA[				UPDATE	TGW_SEND_INFO SET 					   	PROCESSOR_ID = :vo.processorId,  					    RECEIVERS = :vo.receivers, 					    ENFORCE_DATE = TO_DATE(:vo.enforceDate,'YYYY-MM-DD HH24:MI:SS') 				WHERE	DOC_ID = :vo.docId				AND 	COMP_ID = :vo.compId 				AND 	TEMP_YN = 'N'						]]>			</statement>		</query>				<query id="appcom.updateSendInfoSend">		<!-- 발송정보 시행일자 업데이트 -->			<statement>			<![CDATA[				UPDATE	TGW_SEND_INFO SET 					    ENFORCE_DATE = TO_DATE(:vo.enforceDate,'YYYY-MM-DD HH24:MI:SS') 				WHERE	DOC_ID = :vo.docId				AND 	COMP_ID = :vo.compId 				AND 	TEMP_YN = 'N'						]]>			</statement>		</query>	                <query id="enforceSend.updateAppDocReSend">			<!-- 생산문서 정보 업데이트(재발송,반송) :  생산문서의 시행상태는 한건이라도 남은게 있다면 반송 > 재발송요청 > 발송회수 > 발송 > 접수(전부접수시)  로 업데이트 -->            <statement>            <![CDATA[				UPDATE TGW_APP_DOC SET  				       DOC_STATE  = 			  ( SELECT DECODE( ECT007.CNT, 0, 				               DECODE( ECT010.CNT, 0, 				               		   DECODE( ECT009.CNT, 0, 'APP630','APP650')				               		   , 'APP680' )				                , 'APP660' )				FROM				( SELECT COUNT( DOC_ID ) CNT                  FROM   TGW_APP_RECV				  WHERE  DOC_ID = :vo.docId				  AND    COMP_ID = :vo.compId				  AND    ENF_STATE = 'ECT007' ) ECT007,				( SELECT COUNT( DOC_ID ) CNT	              FROM   TGW_APP_RECV				  WHERE  DOC_ID = :vo.docId			 	  AND    COMP_ID = :vo.compId			      AND    ENF_STATE = 'ECT010' ) ECT010,				( SELECT COUNT( DOC_ID ) CNT                  FROM   TGW_APP_RECV				  WHERE  DOC_ID = :vo.docId				  AND    COMP_ID = :vo.compId				  AND    ENF_STATE = 'ECT009' ) ECT009				),				ENF_TYPE = 				( SELECT DECODE( DET002.CNT, 0, 				                 DECODE(DET003.CNT, 0, 'DET001', 'DET003')				                ,DECODE(DET003.CNT, 0, 'DET002', 'DET004') )				  FROM                 				( SELECT COUNT( DOC_ID ) CNT                  FROM   TGW_APP_RECV				  WHERE  DOC_ID = :vo.docId				  AND    COMP_ID = :vo.compId				  AND    ENF_TYPE = 'DET002' ) DET002,				( SELECT COUNT( DOC_ID ) CNT	              FROM   TGW_APP_RECV				  WHERE  DOC_ID = :vo.docId			 	  AND    COMP_ID = :vo.compId			      AND    ENF_TYPE <> 'DET002' ) DET003				)				WHERE  DOC_ID = :vo.docId				AND    COMP_ID = :vo.compId            ]]>            </statement>        </query>        <!--  재발송/추가발송 end -->        <!-- 관인날인 start --> 		<query id="enforceSend.selectStampChk">			<!-- 발송정보 : 날인여부체크 -->            <statement>            <![CDATA[				SELECT SEAL_TYPE				FROM   TGW_SEND_INFO				WHERE  DOC_ID = :vo.docId				AND    COMP_ID = :vo.compId              ]]>            </statement>			<result class="com.sds.acube.app.appcom.vo.SendInfoVO" />        </query>          		<query id="enforceSend.insertStampList">			<!-- 관인날인대장 : 한번저장하면 시행시 시행일자 외에는 업데이트 없음 -->            <statement>            <![CDATA[				INSERT INTO TGW_STAMP_LIST 				( 					STAMP_ID, DOC_ID, COMP_ID, TITLE, DOC_NUMBER, 					ELECTRON_DOC_YN, SEALER_ID, SEALER_NAME, SEALER_POS, PROXY_SEALER_ID, 					PROXY_SEALER_NAME, PROXY_SEALER_POS, SEAL_DEPT_ID,	SEAL_DEPT_NAME, SEAL_DATE, 					SEAL_TYPE, SEAL_NUMBER, ENFORCE_DATE, REQUESTER_ID, REQUESTER_NAME, 					REQUESTER_POS, REQUESTER_DEPT_ID, REQUESTER_DEPT_NAME, REQUEST_DATE, SENDER, RECEIVER, 					REGISTER_ID, REGISTER_NAME, REGIST_DATE, REGISTER_DEPT_ID, REGISTER_DEPT_NAME, 					DELETE_YN, OWN_DEPT_ID, OWN_DEPT_NAME, SEAL_PROC_DATE,SECURITY_PASS, SECURITY_YN,					SECURITY_START_DATE, SECURITY_END_DATE				)				SELECT :vo.stampId, DOC_ID, COMP_ID, TITLE, DEPT_CATEGORY || '-' || SERIAL_NUMBER || DECODE(NVL(SUBSERIAL_NUMBER,0),0,'','-' || SUBSERIAL_NUMBER), 				       ELECTRON_DOC_YN, :vo.sealerId, :vo.sealerName, :vo.sealerPos, :vo.proxySealerId, 				       :vo.proxySealerName, :vo.proxySealerPos, :vo.sealDeptId, :vo.sealDeptName, TO_DATE(:vo.sealDate,'YYYY-MM-DD HH24:MI:SS'), 				       :vo.sealType, :vo.sealNumber, TO_DATE(:vo.enforceDate,'YYYY-MM-DD HH24:MI:SS'), :vo.requesterId, :vo.requesterName, 				       :vo.requesterPos, :vo.requesterDeptId, :vo.requesterDeptName, TO_DATE(:vo.requestDate,'YYYY-MM-DD HH24:MI:SS'), :vo.sender,				       :vo.receiver, :vo.RegisterId, :vo.registerName, TO_DATE(:vo.registDate,'YYYY-MM-DD HH24:MI:SS'), :vo.sealDeptId, 				       :vo.sealDeptName,'N', :vo.ownDeptId, :vo.ownDeptName, TO_DATE(:vo.sealProcDate,'YYYY-MM-DD HH24:MI:SS'),				       :vo.securityPass, :vo.securityYn, TO_DATE(:vo.securityStartDate,'yyyy-mm-dd hh24:mi:ss'), TO_DATE(:vo.securityEndDate, 'yyyy-mm-dd hh24:mi:ss')				FROM   TGW_APP_DOC				WHERE  DOC_ID = :vo.docId				AND    COMP_ID = :vo.compId				AND    1 > ( SELECT COUNT(DOC_ID) 				             FROM   TGW_STAMP_LIST 				             WHERE  DOC_ID = :vo.docId				             AND    COMP_ID = :vo.compId )             ]]>            </statement>        </query>        <query id="enforceSend.updateSendInfoSealType">			<!-- 발송정보 날인유형 업데이트 -->            <statement>            <![CDATA[				UPDATE TGW_SEND_INFO SET  				       SEAL_TYPE  =:vo.sealType				WHERE  DOC_ID = :vo.docId				AND    COMP_ID = :vo.compId            ]]>            </statement>        </query> 		<query id="enforceSend.insertStampFileInfo">			<!-- 관인파일정보저장 -->            <statement>            <![CDATA[				INSERT INTO TGW_FILE_INFO ( DOC_ID, COMP_ID, PROCESSOR_ID, TEMP_YN, FILE_ID, FILE_NAME, DISPLAY_NAME, FILE_TYPE, FILE_SIZE, 							IMAGE_WIDTH, IMAGE_HEIGHT, FILE_ORDER, REGISTER_ID, REGISTER_NAME, REGIST_DATE ) 				VALUES				(  :vo.docId, :vo.compId, :vo.processorId, :vo.tempYn, :vo.fileId, :vo.fileName, :vo.displayName, :vo.fileType, :vo.fileSize, 						:vo.imageWidth, :vo.imageHeight, :vo.fileOrder, :vo.registerId, :vo.registerName, TO_DATE(:vo.registDate,'YYYY-MM-DD HH24:MI:SS') )             ]]>            </statement>        </query><!-- 관인날인 end -->                               <!-- 발송회수- start 회수가 불가할 경우(0인경우) 알림-->        <query id="enforceSend.updateAppRecvCancel">			<!-- 생산문서 수신자 정보 업데이트 (접수안된 발송문서 중 안 읽은거) -->            <statement>            <![CDATA[				UPDATE TGW_APP_RECV SET  					   ENF_STATE       = 'ECT009'				WHERE  DOC_ID = :vo.docId				AND    COMP_ID = :vo.compId				AND	  ENF_TYPE != 'DET011' 				AND    RECEIVE_DATE = TO_DATE('9999-12-31 23:59:59','YYYY-MM-DD HH24:MI:SS')				AND    RECEIVER_ORDER IN ( SELECT RECEIVER_ORDER 				                        FROM   TGW_ENF_RECV										WHERE  DOC_ID = 'ENF' || SUBSTR(:vo.docId,4)										AND    COMP_ID = :vo.compId )            ]]>            </statement>        </query>        <query id="enforceSend.deleteEnfRecvCancel">			<!-- 접수문서수신자정보삭제 -->            <statement>            <![CDATA[				DELETE FROM TGW_ENF_RECV				WHERE  DOC_ID = 'ENF' || SUBSTR(:vo.docId,4)				AND    COMP_ID = :vo.compId 				AND    RECEIVER_ORDER IN 				           (SELECT RECEIVER_ORDER	                        FROM   TGW_APP_RECV							WHERE  DOC_ID = :vo.docId							AND    COMP_ID = :vo.compId							AND    RECEIVE_DATE = TO_DATE('9999-12-31 23:59:59','YYYY-MM-DD HH24:MI:SS') )            ]]>            </statement>        </query>         		<query id="enforceSend.deleteEnfDocCancel">			<!-- 접수문서정보 삭제 -->            <statement>            <![CDATA[				DELETE FROM TGW_ENF_DOC 				WHERE  DOC_ID = 'ENF' || SUBSTR(:vo.docId,4)				AND    COMP_ID = :vo.compId				AND    1 > (SELECT COUNT( RECEIVER_ORDER )	                        FROM   TGW_APP_RECV							WHERE  DOC_ID = :vo.docId							AND    COMP_ID = :vo.compId							AND    ACCEPTER_ID IS NOT NULL )            ]]>            </statement>        </query> 		<query id="enforceSend.deleteFileInfoCancel">			<!-- 파일정보삭제 -->            <statement>            <![CDATA[				DELETE FROM TGW_FILE_INFO 				WHERE  DOC_ID = 'ENF' || SUBSTR(:vo.docId,4)				AND    COMP_ID = :vo.compId				AND    1 > (SELECT COUNT( RECEIVER_ORDER )	                        FROM   TGW_APP_RECV							WHERE  DOC_ID = :vo.docId							AND    COMP_ID = :vo.compId							AND    ACCEPTER_ID IS NOT NULL )             ]]>            </statement>        </query>        <query id="enforceSend.updateAppDocSendCancel">			<!-- 생산문서 정보 업데이트(발송회수) : 일부가 반송이고 일부가 접수인경우, 또는 일부가 회수, 이송 인 경우는 반송 > 재발송요청 > 발송회수 로 업데이트 -->            <statement>            <![CDATA[				UPDATE TGW_APP_DOC SET  				       DOC_STATE  =:vo.docState				WHERE  DOC_ID = :vo.docId				AND    COMP_ID = :vo.compId				AND    DOC_STATE  <> 'APP660'				AND    DOC_STATE  <> 'APP680'            ]]>            </statement>        </query><!-- 발송회수- end --><!-- 발송정보 조회  -->        <query id="enforceSend.selectAppRecv">			<!-- 생산문서 발송정보 조회 (접수확인)-->            <statement>            <![CDATA[				SELECT DOC_ID, COMP_ID, PROCESSOR_ID, TEMP_YN, RECEIVER_ORDER, RECEIVER_TYPE, ENF_TYPE, RECV_COMP_ID,					   RECV_DEPT_ID, RECV_DEPT_NAME, REF_DEPT_ID, REF_DEPT_NAME, RECV_USER_ID, RECV_USER_NAME, POST_NUMBER, 					   ADDRESS, TELEPHONE, FAX, RECV_SYMBOL, REGISTER_ID, REGISTER_NAME, TO_CHAR(REGIST_DATE,'YYYY-MM-DD HH24:MI:SS') REGIST_DATE, 					   SENDER_ID, SENDER_NAME, TO_CHAR(SEND_DATE,'YYYY-MM-DD HH24:MI:SS') SEND_DATE, TO_CHAR(RECEIVE_DATE,'YYYY-MM-DD HH24:MI:SS') RECEIVE_DATE, 					   ACCEPTER_ID, ACCEPTER_NAME, ACCEPTER_POS, ACCEPT_DEPT_ID, ACCEPT_DEPT_NAME, TO_CHAR(ACCEPT_DATE,'YYYY-MM-DD HH24:MI:SS') ACCEPT_DATE, 					   CHARGER_ID, CHARGER_NAME, CHARGER_POS, CHARGE_DEPT_ID, CHARGE_DEPT_NAME, TO_CHAR(CHARGE_PROC_DATE,'YYYY-MM-DD HH24:MI:SS') CHARGE_PROC_DATE,					   NVL(SEND_OPINION,'') SEND_OPINION, ENF_STATE				FROM   TGW_APP_RECV    				WHERE  DOC_ID = :docId				AND    COMP_ID = :compId				ORDER BY RECEIVER_ORDER ASC            ]]>            </statement>			<result class="com.sds.acube.app.approval.vo.AppRecvVO" />        </query>        <query id="enforceSend.updateAppDocState">			<!-- 생산문서 정보 업데이트(발송:시행완료) 생산문서의 처리자는 결재완결자까지만 함. 처리자를 발송까지 업데이트하는 경우 아래 쿼리 수정-->			<!-- 생산문서 정보 업데이트(반송): 일부가 반송이고 일부가 접수인경우, 또는 일부가 회수, 이송 인 경우는 반송 > 재발송요청 > 회수 로 업데이트 -->			<!-- 생산문서 정보 업데이트(발송의뢰/심사대기), 발송안함 , 심사반려, 발송종료-->            <statement>            <![CDATA[				UPDATE TGW_APP_DOC SET  				       DOC_STATE  = :vo.docState				WHERE  DOC_ID = :vo.docId				AND    COMP_ID = :vo.compId            ]]>            </statement>        </query>        <query id="enforceSend.selectAppDocSendChk">			<!-- 발송여부 체크 -->            <statement>            <![CDATA[				SELECT DOC_ID 				FROM TGW_APP_DOC 				WHERE  DOC_ID = :vo.docId				AND    COMP_ID = :vo.compId				AND    DOC_STATE  IN ('APP630','APP640','APP650','APP660','APP670','APP680','APP690')            ]]>            </statement>			<result class="com.sds.acube.app.approval.vo.AppDocVO" />        </query>        <query id="enforceSend.selectFirstSendProc">			<!-- 최초 발송일자 조회() -->            <statement>            <![CDATA[				SELECT DOC_ID, COMP_ID, PROC_ORDER, PROC_TYPE, PROCESSOR_ID, PROCESSOR_NAME, TO_CHAR(PROCESS_DATE,'YYYY-MM-DD HH24:MI:SS') PROCESS_DATE , PROC_OPINION 				FROM   TGW_SEND_PROC 				WHERE  DOC_ID = :vo.docId				AND    COMP_ID = :vo.compId				AND    PROC_TYPE IN ('APT009','APT010')				AND    PROC_ORDER = (SELECT MIN(PROC_ORDER) FROM TGW_SEND_PROC WHERE DOC_ID = :vo.docId AND COMP_ID = :vo.compId )            ]]>            </statement>			<result class="com.sds.acube.app.appcom.vo.SendProcVO" />        </query>        <query id="enforceSend.selectLastSendProc">			<!-- 최종발송이력 조회 -->            <statement>            <![CDATA[				SELECT DOC_ID, COMP_ID, PROC_ORDER, PROC_TYPE, PROCESSOR_ID, PROCESSOR_NAME, TO_CHAR(PROCESS_DATE,'YYYY-MM-DD HH24:MI:SS') PROCESS_DATE , PROC_OPINION 				FROM   TGW_SEND_PROC 				WHERE  DOC_ID = :vo.docId				AND    COMP_ID = :vo.compId				AND    PROC_TYPE  =:vo.procType				AND    PROC_ORDER = (SELECT MAX(PROC_ORDER) FROM TGW_SEND_PROC WHERE DOC_ID = :vo.docId AND COMP_ID = :vo.compId )            ]]>            </statement>			<result class="com.sds.acube.app.appcom.vo.SendProcVO" />        </query>        <query id="enforceSend.selectSendProc">			<!-- 최종발송이력 목록조회 -->            <statement>            <![CDATA[				SELECT DOC_ID, COMP_ID, PROC_ORDER, PROC_TYPE, PROCESSOR_ID, PROCESSOR_NAME, TO_CHAR(PROCESS_DATE,'YYYY-MM-DD HH24:MI:SS') PROCESS_DATE, PROC_OPINION 				FROM   TGW_SEND_PROC 				WHERE  DOC_ID = :vo.docId				AND    COMP_ID = :vo.compId				ORDER  BY PROC_ORDER            ]]>            </statement>			<result class="com.sds.acube.app.appcom.vo.SendProcVO" />        </query>                <query id="enforceSend.selectLastSendComment">			<!-- 최종발송이력 목록조회 -->            <statement>            <![CDATA[				SELECT DOC_ID, COMP_ID, PROC_ORDER, PROC_TYPE, PROCESSOR_ID, PROCESSOR_NAME, TO_CHAR(PROCESS_DATE,'YYYY-MM-DD HH24:MI:SS') PROCESS_DATE, PROC_OPINION 				FROM   TGW_SEND_PROC 				WHERE  DOC_ID = :vo.docId				AND    COMP_ID = :vo.compId				AND    PROC_ORDER = (SELECT MAX(PROC_ORDER) FROM TGW_SEND_PROC WHERE DOC_ID = :vo.docId AND COMP_ID = :vo.compId AND PROC_TYPE='APT009' )            ]]>            </statement>			<result class="com.sds.acube.app.appcom.vo.SendProcVO" />        </query>                <query id="enforceSend.selectLastRejectStampComment">			<!-- 심사반려 의견조회 -->            <statement>            <![CDATA[				SELECT DOC_ID, COMP_ID, PROC_ORDER, PROC_TYPE, PROCESSOR_ID, PROCESSOR_NAME, TO_CHAR(PROCESS_DATE,'YYYY-MM-DD HH24:MI:SS') PROCESS_DATE, PROC_OPINION 				FROM   TGW_SEND_PROC 				WHERE  DOC_ID = :vo.docId				AND    COMP_ID = :vo.compId				AND    PROC_TYPE='APT015'				AND    PROC_ORDER = (SELECT MAX(PROC_ORDER) FROM TGW_SEND_PROC WHERE DOC_ID = :vo.docId AND COMP_ID = :vo.compId )            ]]>            </statement>			<result class="com.sds.acube.app.appcom.vo.SendProcVO" />        </query>                <query id="enforceSend.lastRejectStampChk">			<!-- 심사반려 체크 -->            <statement>            <![CDATA[				SELECT COUNT(DOC_ID) CNT 				FROM   TGW_SEND_PROC 				WHERE  DOC_ID = :docId				AND    COMP_ID = :compId				AND    PROC_TYPE = :procType				AND    PROC_ORDER = (SELECT MAX(PROC_ORDER) FROM TGW_SEND_PROC WHERE DOC_ID = :docId AND COMP_ID = :compId )            ]]>            </statement>        </query> 		<query id="enforceSend.selectStampListInfo">			<!-- 날인정보-->            <statement>            <![CDATA[				SELECT STAMP_ID, COMP_ID, DOC_ID, TITLE, DOC_NUMBER, ELECTRON_DOC_YN, SEALER_ID, SEALER_NAME, SEALER_POS, SEAL_DEPT_ID, 				       SEAL_DEPT_NAME, SEAL_DATE, SEAL_TYPE, SEAL_NUMBER, ENFORCE_DATE, REQUESTER_ID, REQUESTER_NAME, REQUESTER_POS, 				       REQUESTER_DEPT_ID, REQUESTER_DEPT_NAME, REQUEST_DATE, SENDER, RECEIVER, REGISTER_ID, REGISTER_NAME, REGIST_DATE, 				       REMARK, REGISTER_DEPT_ID, REGISTER_DEPT_NAME, DELETE_YN, PROXY_SEALER_ID, PROXY_SEALER_NAME, PROXY_SEALER_POS				FROM   TGW_STAMP_LIST				WHERE  DOC_ID = :vo.docId				AND    COMP_ID = :vo.compId             ]]>            </statement>			<result class="com.sds.acube.app.appcom.vo.StampListVO" />                    </query>		<query id="enforceSend.listStampFile">			<!-- 날인파일정보-->			<statement>			<![CDATA[				SELECT					DOC_ID, COMP_ID, PROCESSOR_ID, TEMP_YN, FILE_ID, 					FILE_NAME, DISPLAY_NAME, FILE_TYPE, FILE_SIZE, IMAGE_WIDTH, 					IMAGE_HEIGHT, FILE_ORDER, REGISTER_ID, REGISTER_NAME, TO_CHAR(REGIST_DATE, 'yyyy-mm-dd hh24:mi:ss') REGIST_DATE 				FROM 	TGW_FILE_INFO				WHERE 	DOC_ID = :vo.docId 				AND 	COMP_ID = :vo.compId				AND 	TEMP_YN = 'N'				AND FILE_TYPE IN( 'AFT005','AFT006') 			]]>			</statement>			<result class="com.sds.acube.app.appcom.vo.FileVO" />           </query>                      <query id="enforceSend.selectDelFileInfo">			<!-- 첨부날인 삭제할 내역 확인-->			<statement>			<![CDATA[				SELECT					HIS_ID 				FROM 	TGW_DOC_HIS				WHERE 	COMP_ID = :vo.compId 				AND 	DOC_ID = :vo.docId				AND		USED_TYPE = :vo.usedType			]]>			</statement>			<result class="com.sds.acube.app.common.vo.DocHisVO" />           </query>                      <query id="enforceSend.deleteFileHis">			<!-- 첨부날인 삭제(첨부 이력)-->			<statement>			<![CDATA[				DELETE FROM TGW_FILE_INFO_HIS								WHERE 	COMP_ID = :vo.compId				AND 	DOC_ID = :vo.docId 				AND 	FILE_HIS_ID = :vo.fileHisId				AND		FILE_TYPE = :vo.fileType			]]>			</statement>           </query>                      <query id="enforceSend.deleteDocHis">			<!-- 문서이력  삭제-->			<statement>			<![CDATA[				DELETE FROM TGW_DOC_HIS								WHERE 	COMP_ID = :vo.compId				AND 	DOC_ID = :vo.docId 				AND 	USED_TYPE = :vo.usedType			]]>			</statement>           </query>                      <query id="enforceSend.deleteFileInfo">			<!-- 첨부파일 삭제-->			<statement>			<![CDATA[				DELETE FROM TGW_FILE_INFO								WHERE 	COMP_ID = :vo.compId				AND 	DOC_ID = :vo.docId				AND		FILE_TYPE = :vo.fileType			]]>			</statement>           </query>                      <query id="enforceSend.selFileHisInFileInfo">			<!-- 최근 fileHis의 내역 select, fileInfo insert-->			<statement>			<![CDATA[				INSERT INTO TGW_FILE_INFO ( DOC_ID, 										    COMP_ID, 										    PROCESSOR_ID, 										    TEMP_YN, 										    FILE_ID, 										    FILE_NAME, 										    DISPLAY_NAME, 										    FILE_TYPE, 										    FILE_SIZE, 										    IMAGE_WIDTH, 										    IMAGE_HEIGHT, 										    FILE_ORDER, 										    REGISTER_ID, 										    REGISTER_NAME, 										    REGIST_DATE										   )				SELECT 						DOC_ID, 											COMP_ID, 											REGISTER_ID, 											'N', 											FILE_ID, 											FILE_NAME, 											DISPLAY_NAME, 											FILE_TYPE, 											FILE_SIZE, 											IMAGE_WIDTH, 											IMAGE_HEIGHT, 											FILE_ORDER, 											REGISTER_ID, 											REGISTER_NAME, 											REGIST_DATE				FROM TGW_FILE_INFO_HIS				WHERE COMP_ID = :vo.compId				AND DOC_ID = :vo.docId				AND FILE_HIS_ID = (										SELECT FILE_HIS_ID										FROM (										    SELECT ROW_NUMBER() OVER(ORDER BY INFO_HIS.REGIST_DATE DESC) STD, INFO_HIS.FILE_HIS_ID										    FROM TGW_FILE_INFO_HIS INFO_HIS										    WHERE INFO_HIS.COMP_ID = :vo.compId										    AND INFO_HIS.DOC_ID = :vo.docId										    AND INFO_HIS.FILE_TYPE = :vo.fileType										    GROUP BY INFO_HIS.FILE_HIS_ID,INFO_HIS.REGIST_DATE										) WHERE STD = 1								  )				AND FILE_TYPE = :vo.fileType 			]]>			</statement>           </query>           	</queries></queryservice>