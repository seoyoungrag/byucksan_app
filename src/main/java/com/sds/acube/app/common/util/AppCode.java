package com.sds.acube.app.common.util;import java.util.Map;import java.util.TreeMap;
/** * Class Name  : AppCode.java <br> Description : 설명  <br> Modification Information <br> <br> 수 정  일 : 2012. 5. 23. <br> 수 정  자 : kimside  <br> 수정내용 :  <br> * @author   kimside  * @since  2012. 5. 23. * @version  1.0  * @see com.sds.acube.app.common.util.AppCode.java */public class AppCode {    private static TreeMap<String, Map<String, String>> appMap = new TreeMap<String, Map<String, String>>();    /**	 */    private static boolean isLoad = false;        public TreeMap<String, Map<String, String>> getInstance() {	return appMap;    }            /**     * category - key 에 해당하는 value를 반환한다      * @return String     */    public String getProperty(String key, String defaultValue, String category) {	String result = defaultValue;	Map<String, String> codeMap = (TreeMap<String, String>) appMap.get(category);	if (codeMap != null) {	    String value = (String) codeMap.get(key);	    if (value != null) {		result = value;	    }	}	return result;    }    /**     * category - key 에 해당하는 value를 반환한다      * @return String     */    public Map<String, String> getProperties(String category) {	return (TreeMap<String, String>) appMap.get(category);    }    /**     * category - key 에 해당하는 value를 셋팅한다      * @return String     */    public boolean setProperty(String key, String value, String category) {	boolean result = false;	if (key != null && !"".equals(key) && value != null && !"".equals(value) && category != null && !"".equals(category)) {	    	    Map<String, String> codeMap = (TreeMap<String, String>) appMap.get(category);	    if (codeMap == null) {		codeMap = new TreeMap<String, String>();	    }	    codeMap.put(key, value);	    synchronized(appMap) {		appMap.put(category, codeMap);	    }	    result = true;	}	return result;    }            /**     * category - key 에 해당하는 value를 삭제한다      * @return String     */    public boolean removeProperty(String key, String value, String category) {	boolean result = false;	if (key != null && !"".equals(key) && value != null && !"".equals(value) && category != null && !"".equals(category)) {	    	    Map<String, String> codeMap = (TreeMap<String, String>) appMap.get(category);	    if (codeMap != null) {		if (codeMap.remove(key) != null) {		    synchronized(appMap) {			appMap.put(category, codeMap);		    }		    result = true;		}	    }	}	return result;    }        /**	 * <pre>  설명 </pre>	 * @return	 * @see   	 */    public boolean getIsLoad() {	return isLoad;    }        public void setIsLoad(boolean isLoad) {	AppCode.isLoad = isLoad;    }        public void clear() {	appMap.clear();    }}
