package com.sds.acube.app.common.interceptor;import java.io.PrintWriter;import java.util.Enumeration;import java.util.Locale;import javax.inject.Inject;import javax.inject.Named;import javax.servlet.http.HttpServletRequest;import javax.servlet.http.HttpServletResponse;import javax.servlet.http.HttpSession;import org.jconfig.Configuration;import org.springframework.context.MessageSource;import org.springframework.web.servlet.ModelAndView;import org.springframework.web.servlet.handler.HandlerInterceptorAdapter;import com.sds.acube.esso.agent.SSOAgent;import com.sds.acube.esso.vo.SSOData;import com.sds.acube.app.common.util.AppCode;import com.sds.acube.app.common.util.AppConfig;import com.sds.acube.app.common.util.CommonUtil;import com.sds.acube.app.common.util.ConstantList;import com.sds.acube.app.common.util.DateUtil;import com.sds.acube.app.common.util.GuidUtil;import com.sds.acube.app.common.util.MemoryUtil;import com.sds.acube.app.common.util.Transform;import com.sds.acube.app.login.security.seed.SeedBean;import com.sds.acube.app.login.service.ILoginService;import com.sds.acube.app.login.vo.LoginHistoryVO;import com.sds.acube.app.login.vo.LoginVO;import com.sds.acube.app.login.vo.UserProfileVO;/** * Class Name  : RequestInterceptor.java <br> Description : 설명  <br> Modification Information <br> <br> 수 정  일 : 2012. 5. 23. <br> 수 정  자 : kimside  <br> 수정내용 :  <br> * @author   kimside  * @since  2012. 5. 23. * @version  1.0  * @see com.sds.acube.app.common.interceptor.RequestInterceptor.java */public class RequestInterceptor extends HandlerInterceptorAdapter {	@Inject	@Named("messageSource")	MessageSource messageSource;	/**	 */	@Inject	@Named("loginService")	private ILoginService loginService;	@Override	public boolean preHandle(HttpServletRequest request, HttpServletResponse response, Object hadler) throws Exception {		HttpSession session = request.getSession();		String uri = request.getRequestURI();		String userId = (String) session.getAttribute("USER_ID");		if (!uri.contains("/login/") && !uri.contains("/esb/") &&!uri.contains("responsePortalCount") && (userId == null || "".equals(userId))) {						String sessionMsg = messageSource.getMessage("common.msg.not.session", null, (Locale)session.getAttribute("LANG_TYPE"));			String webUri = AppConfig.getProperty("web_uri", "/ep", "path");			//아래 CommonUtil에서 로그아웃 얼럿과 페이지이동 스크립트를 보낸다.			//CommonUtil.script(response, "alert('" + sessionMsg + "');top.location.href = '" + webUri + "/app/login/logout.do'");			CommonUtil.script(response, "alert('" + sessionMsg + "');top.location.href = '" + webUri + "/app/jsp/login/sessionWindowCheck.jsp'"); //session체크하는 서블릿을 호출 by 서영락, 2016-01-11			return false;		}		String externalWeb = AppConfig.getProperty("external_web", "192.168.115.101,192.168.115.111,192.168.115.112", "path");		String serverName = request.getServerName();		String userIp = CommonUtil.nullTrim(request.getHeader("WL-Proxy-Client-IP"));		if (userIp.length() == 0) {			userIp = CommonUtil.nullTrim(request.getHeader("Proxy-Client-IP"));		}		if (userIp.length() == 0) {			userIp = CommonUtil.nullTrim(request.getRemoteAddr());		}		boolean isExtWeb = (externalWeb.indexOf(userIp) == -1 && externalWeb.indexOf(serverName) == -1) ? false : true;		session.setAttribute("IS_EXTWEB", isExtWeb);		return true;	}	@Override	public void postHandle(HttpServletRequest request, HttpServletResponse response, Object hadler, ModelAndView mav) throws Exception {	}	@Override	public void afterCompletion(HttpServletRequest request, HttpServletResponse response, Object hadler, Exception exception)			throws Exception {	}}