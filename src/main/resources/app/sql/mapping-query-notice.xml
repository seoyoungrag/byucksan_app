<?xml version="1.0" encoding="UTF-8"?><queryservice xmlns="http://www.anyframejava.org/schema/query/mapping"	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"	xsi:schemaLocation="http://www.anyframejava.org/schema/query/mapping http://www.anyframejava.org/schema/query/anyframe-query-mapping-1.0.xsd ">	
	<queries>
		<query id="notice.SelectNotice">			<statement>			<![CDATA[				SELECT					REPORT_NO					,SUBJECT_TITLE					,CONTENTS_ETC					,CLASS_CODE					,TO_CHAR(TO_DATE(INPUT_DATE,'YYYYMMDDHH24MISS'),'YYYY/MM/DD') AS INPUT_DATE					,INPUTER_NO								,INPUTER_NAME					,RECEIVE_ORGS										,TOTAL_COUNT        		FROM        		(					SELECT 						REPORT_NO						,SUBJECT_TITLE						,CONTENTS_ETC						,CLASS_CODE						,INPUT_DATE						,INPUTER_NO									,INPUTER_NAME						,RECEIVE_ORGS										,COUNT(*) OVER() TOTAL_COUNT					FROM 					(						SELECT 							REPORT_NO							,SUBJECT_TITLE							,CONTENTS_ETC							,CLASS_CODE							,INPUTER_NO										,INPUTER_NAME							,INPUT_DATE									,(				                SELECT 				                	rtrim(xmlagg(xmlelement(e,ORG_ID,',').extract('//text()') order by ORG_ID).GetClobVal(),',') AS SNS				                FROM   				                	TCN_NOTICE_SEND_ORG				                WHERE REPORT_NO = tcn_notice.REPORT_NO				                GROUP BY REPORT_NO			                ) AS RECEIVE_ORGS								FROM TCN_NOTICE tcn_notice		                						UNION ALL                    	          			SELECT 							TO_CHAR(tb_hsm_mgof_annc_fcts_m.ANNC_FCTS_SN) AS REPORT_NO,							tb_hsm_mgof_annc_fcts_m.ANNC_TL AS SUBJECT_TITLE,							tb_hsm_mgof_annc_fcts_m.ANNC_CTS AS CONTENTS_ETC,							'03' AS CLASS_CODE,							(								select 									cmn_usr_id 								from 									TB_COM_USR_M 								where cmn_usr_adm_no = 									(										select 											RGS_USR_ADM_NO 										from 											TB_HSM_MGOF_ANNC_FCTS_M tb_hsm_mgof_annc_fcts_m1  										where tb_hsm_mgof_annc_fcts_m1.ANNC_FCTS_SN = tb_hsm_mgof_annc_fcts_m.ANNC_FCTS_SN									)							) AS INPUTER_NO,							(								select 									USR_NM 								from 									TB_COM_USR_M 								where cmn_usr_adm_no = 									(										select 											RGS_USR_ADM_NO 										from 											TB_HSM_MGOF_ANNC_FCTS_M tb_hsm_mgof_annc_fcts_m1  										where tb_hsm_mgof_annc_fcts_m1.ANNC_FCTS_SN = tb_hsm_mgof_annc_fcts_m.ANNC_FCTS_SN									)							) AS INPUTER_NAME,							TO_CHAR(RGS_DTTM,'yyyymmddhh24miss') AS INPUT_DATE,							(								SELECT 									rtrim(xmlagg(xmlelement(e,SBD_LGO_NO,',').extract('//text()') order by RGS_DTTM).GetClobVal(),',') AS SNS									FROM   TB_HSM_ANNC_TRG_SBD_LGO_M									WHERE ANNC_FCTS_SN = tb_hsm_mgof_annc_fcts_m.ANNC_FCTS_SN AND DEL_YN ='N'									GROUP BY ANNC_FCTS_SN							) AS RECEIVE_ORGS						FROM TB_HSM_MGOF_ANNC_FCTS_M tb_hsm_mgof_annc_fcts_m					)					#if ($vo.receiveOrgs)	                    WHERE RECEIVE_ORGS LIKE  '%' || :vo.receiveOrgs || '%'	                #end       			)       			       			WHERE CLASS_CODE IN ({{vo.classCode}})       			       			#if ($vo.searchValue)                    AND SUBJECT_TITLE LIKE '%' || :vo.searchValue || '%'                #end       			       			ORDER BY INPUT_DATE DESC			]]>			</statement>			<result class="com.sds.acube.app.notice.vo.NoticeVO" />		</query>				<query id="notice.getNotice">			<statement>			<![CDATA[				SELECT					REPORT_NO					,SUBJECT_TITLE					,CONTENTS_ETC					,CLASS_CODE					,TO_CHAR(TO_DATE(INPUT_DATE,'YYYYMMDDHH24MISS'),'YYYY/MM/DD') AS INPUT_DATE					,INPUTER_NO								,INPUTER_NAME					,RECEIVE_ORGS						,RECEIVE_ORG_NAMES									,TOTAL_COUNT        		FROM        		(					SELECT 						REPORT_NO						,SUBJECT_TITLE						,CONTENTS_ETC						,CLASS_CODE						,INPUT_DATE						,INPUTER_NO									,INPUTER_NAME						,RECEIVE_ORGS							,RECEIVE_ORG_NAMES									,COUNT(*) OVER() TOTAL_COUNT					FROM 					(						SELECT 							REPORT_NO							,SUBJECT_TITLE							,CONTENTS_ETC							,CLASS_CODE							,INPUTER_NO										,INPUTER_NAME							,INPUT_DATE									,(				                SELECT 				                	rtrim(xmlagg(xmlelement(e,ORG_ID,',').extract('//text()') order by ORG_ID).GetClobVal(),',') AS SNS				                FROM   				                	TCN_NOTICE_SEND_ORG				                WHERE REPORT_NO = tcn_notice.REPORT_NO				                GROUP BY REPORT_NO			                ) AS RECEIVE_ORGS			                ,(					            SELECT 					              rtrim(xmlagg(xmlelement(e,ORG_NAME,',').extract('//text()') order by ORG_ID).GetClobVal(),',') AS SNS					            FROM   					              TCN_NOTICE_SEND_ORG					            WHERE REPORT_NO = tcn_notice.REPORT_NO					            GROUP BY REPORT_NO							) AS RECEIVE_ORG_NAMES									FROM TCN_NOTICE tcn_notice		                						UNION ALL                    	          			SELECT 							TO_CHAR(tb_hsm_mgof_annc_fcts_m.ANNC_FCTS_SN) AS REPORT_NO,							tb_hsm_mgof_annc_fcts_m.ANNC_TL AS SUBJECT_TITLE,							tb_hsm_mgof_annc_fcts_m.ANNC_CTS AS CONTENTS_ETC,							'03' AS CLASS_CODE,							(								select 									cmn_usr_id 								from 									TB_COM_USR_M 								where cmn_usr_adm_no = 									(										select 											RGS_USR_ADM_NO 										from 											TB_HSM_MGOF_ANNC_FCTS_M tb_hsm_mgof_annc_fcts_m1  										where tb_hsm_mgof_annc_fcts_m1.ANNC_FCTS_SN = tb_hsm_mgof_annc_fcts_m.ANNC_FCTS_SN									)							) AS INPUTER_NO,							(								select 									USR_NM 								from 									TB_COM_USR_M 								where cmn_usr_adm_no = 									(										select 											RGS_USR_ADM_NO 										from 											TB_HSM_MGOF_ANNC_FCTS_M tb_hsm_mgof_annc_fcts_m1  										where tb_hsm_mgof_annc_fcts_m1.ANNC_FCTS_SN = tb_hsm_mgof_annc_fcts_m.ANNC_FCTS_SN									)							) AS INPUTER_NAME,							TO_CHAR(RGS_DTTM,'yyyymmddhh24miss') AS INPUT_DATE,							(								SELECT rtrim(xmlagg(xmlelement(e,SBD_LGO_NO,',').extract('//text()') order by RGS_DTTM).GetClobVal(),',') AS SNS									FROM   TB_HSM_ANNC_TRG_SBD_LGO_M									WHERE ANNC_FCTS_SN = tb_hsm_mgof_annc_fcts_m.ANNC_FCTS_SN AND DEL_YN ='N'									GROUP BY ANNC_FCTS_SN							) AS RECEIVE_ORGS,							(								SELECT rtrim(xmlagg(xmlelement(e,ORG_NAME,',').extract('//text()') order by ORG_NAME).GetClobVal(),',') AS SNS									FROM   ( 				                    select 				                      ANNC_FCTS_SN, ORG_ID, ORG_NAME 				                    from 				                      TB_HSM_ANNC_TRG_SBD_LGO_M a, TCN_ORGANIZATIONINFORMATION b				                    where				                      a.SBD_LGO_NO = b.ORG_ID  and a.DEL_YN ='N'				                    ) c				                  where c.ANNC_FCTS_SN = tb_hsm_mgof_annc_fcts_m.ANNC_FCTS_SN													GROUP BY ANNC_FCTS_SN							) AS RECEIVE_ORG_NAMES							FROM TB_HSM_MGOF_ANNC_FCTS_M tb_hsm_mgof_annc_fcts_m					)					#if ($vo.receiveOrgs)	                    WHERE RECEIVE_ORGS LIKE '%' || :vo.receiveOrgs || '%'	                #end       			)       			       			WHERE REPORT_NO = :vo.reportNo			]]>			</statement>			<result class="com.sds.acube.app.notice.vo.NoticeVO" />		</query>				<query id= "notice.insert">			<statement>			<![CDATA[				INSERT INTO  TCN_NOTICE 				(					REPORT_NO					,SUBJECT_TITLE					,CONTENTS_ETC					,CLASS_CODE					,INPUT_DATE							,INPUTER_NO								,INPUTER_NAME								) VALUES (					:vo.reportNo					,:vo.subjectTitle					,:vo.contentsEtc					,:vo.classCode					,TO_CHAR(sysdate,'yyyymmddhh24miss')					,:vo.inputerNo								,:vo.inputerName						)			]]>			</statement>		</query>				<query id= "noticeso.insert">			<statement>			<![CDATA[				INSERT INTO  TCN_NOTICE_SEND_ORG 				(					REPORT_NO					,ORG_ID					,ORG_NAME					,INPUT_DATE				) VALUES (					:vo.reportNo					,:vo.orgId					,:vo.orgName					,TO_CHAR(sysdate,'yyyymmddhh24miss')				)			]]>			</statement>		</query>				<query id= "notice.update">			<statement>				UPDATE TCN_NOTICE				   SET SUBJECT_TITLE = :vo.subjectTitle, CONTENTS_ETC = :vo.contentsEtc				WHERE REPORT_NO = :vo.reportNo			</statement>		</query>				<query id= "notice.delete">			<statement>				DELETE FROM TCN_NOTICE				WHERE REPORT_NO IN ({{vo.reportNos}})			</statement>		</query>				<query id= "noticeso.delete">			<statement>				DELETE FROM TCN_NOTICE_SEND_ORG				WHERE REPORT_NO IN ({{vo.reportNos}})			</statement>		</query>			</queries>
</queryservice>
