<?xml version="1.0" encoding="UTF-8"?><queryservice xmlns="http://www.anyframejava.org/schema/query/mapping"	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"	xsi:schemaLocation="http://www.anyframejava.org/schema/query/mapping http://www.anyframejava.org/schema/query/anyframe-query-mapping-1.0.xsd ">	<queries><!-- 접수/배부 start -->		<query id="enforceAccept.insertEnfProc">			<!-- 접수처리이력-->			<statement>			<![CDATA[				INSERT INTO TGW_ENF_PROC ( DOC_ID, COMP_ID, RECEIVER_ORDER, PROC_ORDER, PROC_TYPE, 				PROCESSOR_ID, PROCESSOR_NAME, PROCESSOR_POS, PROCESSOR_DEPT_ID, PROCESSOR_DEPT_NAME, PROCESS_DATE, PROC_OPINION )				VALUES (   :vo.docId,				           :vo.compId,				           :vo.receiverOrder,				           NVL((SELECT MAX(PROC_ORDER) FROM TGW_ENF_PROC WHERE DOC_ID = :vo.docId AND COMP_ID = :vo.compId AND RECEIVER_ORDER = :vo.receiverOrder ),0) + 1,  				           :vo.procType,				           :vo.processorId,				           :vo.processorName, 				           :vo.processorPos,				           :vo.processorDeptId,				           :vo.processorDeptName, 				           TO_DATE(:vo.processDate,'YYYY-MM-DD HH24:MI:SS' ),				           :vo.procOpinion )			]]>			</statement>		</query>				<query id="enforceAccept.updateEnfProc">			<!-- 접수처리이력-->			<statement>			<![CDATA[				UPDATE TGW_ENF_PROC SET					   DOC_ID =  :vo.docId				WHERE  DOC_ID = :vo.enfDocId				AND    COMP_ID = :vo.compId				AND    RECEIVER_ORDER = :vo.receiverOrder			]]>			</statement>		</query>				     	<query id="enforceAccept.insertEnfDocDup">			<!-- 접수문서정보 복제 -->            <statement>            <![CDATA[				INSERT INTO TGW_ENF_DOC ( DOC_ID, COMP_ID, ORIGIN_COMP_ID, ORIGIN_DOC_ID, ENF_TYPE, TITLE, DOC_STATE, 					   DOC_NUMBER, DEPT_CATEGORY, SERIAL_NUMBER, SUBSERIAL_NUMBER, 					   ACCEPTER_ID, ACCEPTER_NAME, ACCEPTER_POS, ACCEPT_DEPT_ID, ACCEPT_DEPT_NAME, ACCEPT_DATE, READ_RANGE, CONSERVE_TYPE, RECEIVE_DATE, 					   DISTRIBUTE_YN, DISTRIBUTOR_ID, DISTRIBUTOR_NAME, DISTRIBUTOR_POS, DISTRIBUTOR_DEPT_ID, DISTRIBUTOR_DEPT_NAME, DISTRIBUTE_DATE, 					   ELECTRON_DOC_YN, ATTACH_COUNT, DELETE_YN, URGENCY_YN, PUBLIC_POST, 					   BINDING_ID, BINDING_NAME, HANDOVER_YN, MOBILE_YN, TRANSFER_YN, 					   SENDER_ID, SENDER_NAME, SEND_DATE, SEND_OPINION, SENDER_POS, SENDER_DEPT_ID, SENDER_DEPT_NAME, SENDER_COMP_ID, SENDER_COMP_NAME, 					   PROCESSOR_ID, PROCESSOR_NAME, PROCESSOR_POS, PROCESSOR_DEPT_ID, PROCESSOR_DEPT_NAME, OPEN_LEVEL, OPEN_REASON, DISTRIBUTE_NUMBER,					   DOC_TYPE, REGISTER_ID, REGISTER_NAME, REGIST_DATE, LAST_UPDATE_DATE, UNREGIST_YN, CLASS_NUMBER, DOCNUM_NAME,					   ASSISTANT_LINE_TYPE, AUDIT_LINE_TYPE ) 			    SELECT :vo.docId, :vo.compId, ORIGIN_COMP_ID, ORIGIN_DOC_ID, :vo.enfType, TITLE, 'ENF300', 					   DOC_NUMBER, :vo.deptCategory, :vo.serialNumber, 0, 					   :vo.accepterId, :vo.accepterName, :vo.accepterPos, :vo.acceptDeptId, :vo.acceptDeptName, TO_DATE(:vo.acceptDate,'YYYY-MM-DD HH24:MI:SS'), :vo.readRange, :vo.conserveType, RECEIVE_DATE, 					   DISTRIBUTE_YN, DISTRIBUTOR_ID, DISTRIBUTOR_NAME, DISTRIBUTOR_POS, DISTRIBUTOR_DEPT_ID, DISTRIBUTOR_DEPT_NAME, DISTRIBUTE_DATE, 					   ELECTRON_DOC_YN, ATTACH_COUNT, DELETE_YN, :vo.urgencyYn, :vo.publicPost, 					   :vo.bindingId, :vo.bindingName, HANDOVER_YN, MOBILE_YN, TRANSFER_YN, 					   SENDER_ID, SENDER_NAME, SEND_DATE, SEND_OPINION, SENDER_POS, SENDER_DEPT_ID, SENDER_DEPT_NAME, SENDER_COMP_ID, SENDER_COMP_NAME, 					   PROCESSOR_ID, PROCESSOR_NAME, PROCESSOR_POS, PROCESSOR_DEPT_ID, PROCESSOR_DEPT_NAME, OPEN_LEVEL, OPEN_REASON, DISTRIBUTE_NUMBER,					   DOC_TYPE, :vo.accepterId,:vo.accepterName, TO_DATE(:vo.acceptDate,'YYYY-MM-DD HH24:MI:SS'), sysdate, 'N', :vo.classNumber, :vo.docnumName,					   ASSISTANT_LINE_TYPE, AUDIT_LINE_TYPE				FROM   TGW_ENF_DOC				WHERE  DOC_ID = :vo.enfDocId				AND    ORIGIN_COMP_ID = :vo.originCompId            ]]>            </statement>        </query>             	<query id="enforceAccept.insertEnfDocDist">			<!-- 배부문서정보 복제 -->            <statement>            <![CDATA[				INSERT INTO TGW_ENF_DOC ( DOC_ID, COMP_ID, ORIGIN_COMP_ID, ORIGIN_DOC_ID, ENF_TYPE, TITLE, DOC_STATE, 					   DOC_NUMBER, DEPT_CATEGORY, SERIAL_NUMBER, SUBSERIAL_NUMBER, 					   ACCEPTER_ID, ACCEPTER_NAME, ACCEPTER_POS, ACCEPT_DEPT_ID, ACCEPT_DEPT_NAME, ACCEPT_DATE, READ_RANGE, CONSERVE_TYPE, RECEIVE_DATE, 					   DISTRIBUTE_YN, DISTRIBUTOR_ID, DISTRIBUTOR_NAME, DISTRIBUTOR_POS, DISTRIBUTOR_DEPT_ID, DISTRIBUTOR_DEPT_NAME, DISTRIBUTE_DATE, 					   ELECTRON_DOC_YN, ATTACH_COUNT, DELETE_YN, URGENCY_YN, PUBLIC_POST, 					   BINDING_ID, BINDING_NAME, HANDOVER_YN, MOBILE_YN, TRANSFER_YN, 					   SENDER_ID, SENDER_NAME, SEND_DATE, SEND_OPINION, SENDER_POS, SENDER_DEPT_ID, SENDER_DEPT_NAME, SENDER_COMP_ID, SENDER_COMP_NAME, 					   PROCESSOR_ID, PROCESSOR_NAME, PROCESSOR_POS, PROCESSOR_DEPT_ID, PROCESSOR_DEPT_NAME, OPEN_LEVEL, OPEN_REASON, DISTRIBUTE_NUMBER,					   DOC_TYPE, REGISTER_ID, REGISTER_NAME, REGIST_DATE, LAST_UPDATE_DATE, UNREGIST_YN, 					   ASSISTANT_LINE_TYPE, AUDIT_LINE_TYPE ) 			    SELECT :vo.docId, :vo.compId, ORIGIN_COMP_ID, ORIGIN_DOC_ID, 'DET003', TITLE, 'ENF200', 					   DOC_NUMBER, DEPT_CATEGORY, SERIAL_NUMBER, 0, 					   ACCEPTER_ID, ACCEPTER_NAME, ACCEPTER_POS, :vo.acceptDeptId, ACCEPT_DEPT_NAME, TO_DATE('9999-12-31 23:59:59','YYYY-MM-DD HH24:MI:SS'), READ_RANGE, CONSERVE_TYPE, RECEIVE_DATE, 					   :vo.distributeYn, :vo.distributorId, :vo.distributorName, :vo.distributorPos, :vo.distributorDeptId, :vo.distributorDeptName, TO_DATE(:vo.distributeDate,'YYYY-MM-DD HH24:MI:SS'), 					   ELECTRON_DOC_YN, ATTACH_COUNT, DELETE_YN, URGENCY_YN, PUBLIC_POST, 					   BINDING_ID, BINDING_NAME, HANDOVER_YN, MOBILE_YN, TRANSFER_YN, 					   SENDER_ID, SENDER_NAME, SEND_DATE, SEND_OPINION, SENDER_POS, SENDER_DEPT_ID, SENDER_DEPT_NAME, SENDER_COMP_ID, SENDER_COMP_NAME, 					   PROCESSOR_ID, PROCESSOR_NAME, PROCESSOR_POS, PROCESSOR_DEPT_ID, PROCESSOR_DEPT_NAME, OPEN_LEVEL, OPEN_REASON, :vo.distributeNumber,					   DOC_TYPE, :vo.distributorId,:vo.distributorName, TO_DATE(:vo.distributeDate,'YYYY-MM-DD HH24:MI:SS'), sysdate, 'N', 					   ASSISTANT_LINE_TYPE, AUDIT_LINE_TYPE				FROM   TGW_ENF_DOC				WHERE  DOC_ID = :vo.enfDocId				AND    ORIGIN_COMP_ID = :vo.originCompId            ]]>            </statement>        </query>               <query id="enforceAccept.updateAppRecvOnRead">			<!-- 생산문서 수신자 정보 업데이트(열람) -->            <statement>            <![CDATA[				UPDATE TGW_APP_RECV SET  					   RECEIVE_DATE 	= TO_DATE(:vo.receiveDate,'YYYY-MM-DD HH24:MI:SS')				WHERE  DOC_ID =  :vo.docId 				AND    COMP_ID = :vo.compId				AND	   RECEIVER_ORDER = :vo.receiverOrder				AND    RECEIVE_DATE = TO_DATE('9999-12-31 23:59:59','YYYY-MM-DD HH24:MI:SS')            ]]>            </statement>        </query>              <query id="enforceAccept.updateEnfDocOnRead">			<!-- 접수문서 수신일자 업데이트(열람) -->            <statement>            <![CDATA[				UPDATE TGW_ENF_DOC SET  					   RECEIVE_DATE 	= TO_DATE(:vo.receiveDate,'YYYY-MM-DD HH24:MI:SS')				WHERE  DOC_ID =  :vo.docId 				AND    COMP_ID = :vo.compId				AND    RECEIVE_DATE = TO_DATE('9999-12-31 23:59:59','YYYY-MM-DD HH24:MI:SS')            ]]>            </statement>        </query>          <query id="enforceAccept.updateEnfRecvOnRead">			<!-- 접수문서 수신일자 업데이트(열람) -->            <statement>            <![CDATA[				UPDATE TGW_ENF_RECV SET  					   READ_DATE 	= TO_DATE(:vo.readDate,'YYYY-MM-DD HH24:MI:SS')				WHERE  DOC_ID =  :vo.docId 				AND    RECV_COMP_ID = :vo.compId				AND	   RECEIVER_ORDER = :vo.receiverOrder				AND    READ_DATE = TO_DATE('9999-12-31 23:59:59','YYYY-MM-DD HH24:MI:SS')            ]]>            </statement>        </query>          <query id="enforceAccept.updateAppRecvOnAccept">			<!-- 생산문서 수신자 정보 업데이트(접수) -->            <statement>            <![CDATA[				UPDATE TGW_APP_RECV SET  				       ACCEPTER_ID      = :vo.accepterId,				       ACCEPTER_NAME    = :vo.accepterName,					   ACCEPTER_POS 	= :vo.accepterPos,					   ACCEPT_DEPT_ID	= :vo.acceptDeptId,					   ACCEPT_DEPT_NAME = :vo.acceptDeptName,					   ACCEPT_DATE 		= TO_DATE(:vo.acceptDate,'YYYY-MM-DD HH24:MI:SS'),				       SEND_OPINION    	= :vo.sendOpinion,				       ENF_STATE       	= :vo.enfState				WHERE  DOC_ID =  :vo.docId 				AND    COMP_ID = :vo.compId				AND	   RECEIVER_ORDER = :vo.receiverOrder            ]]>            </statement>        </query>                <query id="enforceAccept.updateAppRecvOnRelay">			<!-- 생산문서 수신자 정보 업데이트(문서유통) -->            <statement>            <![CDATA[				UPDATE TGW_APP_RECV SET  						ACCEPTER_ID         = :vo.accepterId,						ACCEPTER_NAME       = :vo.accepterName,						ACCEPTER_POS 	    = :vo.accepterPos,						ACCEPT_DEPT_ID	    = :vo.acceptDeptId,						ACCEPT_DEPT_NAME    = :vo.acceptDeptName,						ACCEPT_DATE 		= TO_DATE(:vo.acceptDate,'YYYY-MM-DD HH24:MI:SS'),						SEND_OPINION    	= :vo.sendOpinion,						ENF_STATE       	= :vo.enfState				WHERE  DOC_ID =  :vo.docId 				AND    COMP_ID = :vo.compId				AND	   ((RECV_DEPT_ID = :vo.acceptDeptId and REF_DEPT_ID is NULL) or (REF_DEPT_ID = :vo.acceptDeptId))            ]]>            </statement>        </query>                  <query id="enforceAccept.updateAppRecvOnDist">			<!-- 생산문서 수신자 정보 업데이트(배부) -->            <statement>            <![CDATA[ 				UPDATE TGW_APP_RECV SET  				       ACCEPTER_ID      = :vo.accepterId,				       ACCEPTER_NAME    = :vo.accepterName,					   ACCEPTER_POS 	= :vo.accepterPos,					   ACCEPT_DEPT_ID	= :vo.acceptDeptId,					   ACCEPT_DEPT_NAME = :vo.acceptDeptName,					   ACCEPT_DATE 		= TO_DATE(:vo.acceptDate,'YYYY-MM-DD HH24:MI:SS'),				       SEND_OPINION    	= :vo.sendOpinion,				       ENF_STATE = 'ECT002' 				WHERE  DOC_ID =  :vo.docId 				AND    COMP_ID = :vo.compId				AND	   RECEIVER_ORDER = :vo.receiverOrder            ]]>            </statement>        </query>          <query id="enforceAccept.insertEnfRecvOnAccept">			<!-- 접수된 문서수신자정보 신규생성(접수) -->            <statement>            <![CDATA[				INSERT INTO TGW_ENF_RECV ( DOC_ID, COMP_ID, RECEIVER_ORDER, RECEIVER_TYPE, ENF_TYPE, RECV_COMP_ID, 				RECV_DEPT_ID, RECV_DEPT_NAME, REF_DEPT_ID, REF_DEPT_NAME, RECV_USER_ID, RECV_USER_NAME, RECV_SYMBOL,				REGIST_DATE, READ_DATE )				SELECT :vo.docId, :vo.compId, RECEIVER_ORDER, RECEIVER_TYPE, ENF_TYPE, RECV_COMP_ID, 				RECV_DEPT_ID, RECV_DEPT_NAME, REF_DEPT_ID, REF_DEPT_NAME, RECV_USER_ID, RECV_USER_NAME, RECV_SYMBOL,				REGIST_DATE, READ_DATE 				FROM TGW_ENF_RECV				WHERE  DOC_ID = :vo.originDocId				AND    RECV_COMP_ID = :vo.compId 				AND	   RECEIVER_ORDER = :vo.receiverOrder				AND    ENF_TYPE = :vo.enfType            ]]>            </statement>        </query>                              <query id="enforceAccept.insertEnfRecvOnDist">			<!-- 접수된 문서수신자정보 신규생성(배부) -->            <statement>            <![CDATA[				INSERT INTO TGW_ENF_RECV ( DOC_ID, COMP_ID, RECEIVER_ORDER, RECEIVER_TYPE, ENF_TYPE, RECV_COMP_ID, 				RECV_DEPT_ID, RECV_DEPT_NAME, REF_DEPT_ID, REF_DEPT_NAME, RECV_USER_ID, RECV_USER_NAME, RECV_SYMBOL,				REGIST_DATE, RECV_STATE, READ_DATE )				SELECT :vo.docId, :vo.compId, :vo.distributeOrder, RECEIVER_TYPE, ENF_TYPE, RECV_COMP_ID, 				RECV_DEPT_ID, RECV_DEPT_NAME, :vo.refDeptId, :vo.refDeptName, RECV_USER_ID, RECV_USER_NAME, RECV_SYMBOL,				REGIST_DATE, :vo.recvState, TO_DATE('9999-12-31 23:59:59','YYYY-MM-DD HH24:MI:SS') 				FROM TGW_ENF_RECV				#if($vo.enfType.equals("DET011"))					WHERE  DOC_ID = :vo.originDocId				#else					WHERE  DOC_ID = 'ENF' ||  SUBSTR(:vo.originDocId,4)				#end				AND    RECV_COMP_ID = :vo.compId 				AND	   RECEIVER_ORDER = :vo.receiverOrder				AND    ENF_TYPE = :vo.enfType				            ]]>            </statement>        </query>                                      <query id="enforceAccept.deleteEnfRecvOnAccept">			<!-- 배부/접수된문서 기 수신자정보삭제 -->            <statement>            <![CDATA[				DELETE FROM TGW_ENF_RECV				#if($vo.enfType.equals("DET011"))					WHERE  DOC_ID = :vo.originDocId				#else					WHERE  DOC_ID = 'ENF' ||  SUBSTR(:vo.originDocId,4)				#end				AND    RECV_COMP_ID = :vo.compId 				AND	   RECEIVER_ORDER = :vo.receiverOrder				AND    ENF_TYPE = :vo.enfType            ]]>            </statement>        </query>                <query id="enforceAccept.deleteEnfDelDistributeAccept">			<!-- 배부후 접수한 문서 원본 삭제 -->            <statement>            <![CDATA[				DELETE FROM TGW_ENF_DOC				WHERE  DOC_ID = :vo.enfDocId				AND COMP_ID = :vo.compId				AND DISTRIBUTE_YN IN ('Y', 'YY')				AND 0 = (							SELECT COUNT(DOC_ID)							FROM TGW_ENF_RECV							WHERE DOC_ID = :vo.enfDocId						)            ]]>            </statement>        </query>                <query id="enforceAccept.deleteEnfDistributeFileInfo">			<!-- 배부후 접수한 문서 파일 삭제 -->            <statement>            <![CDATA[				DELETE FROM TGW_FILE_INFO				WHERE  DOC_ID = :vo.enfDocId				AND COMP_ID = :vo.compId				            ]]>            </statement>        </query>  		<query id="enforceAccept.insertEnfFileDupAccept">			<!-- 접수파일정보복제 -->            <statement>            <![CDATA[				INSERT INTO TGW_FILE_INFO ( DOC_ID, COMP_ID, PROCESSOR_ID, TEMP_YN, FILE_ID, FILE_NAME, DISPLAY_NAME, FILE_TYPE, FILE_SIZE, 				        IMAGE_WIDTH, IMAGE_HEIGHT, FILE_ORDER, REGISTER_ID, REGISTER_NAME, REGIST_DATE ) 				SELECT  :vo.docId, :vo.compId, PROCESSOR_ID, TEMP_YN, FILE_ID, FILE_NAME, DISPLAY_NAME, FILE_TYPE, FILE_SIZE, 						IMAGE_WIDTH, IMAGE_HEIGHT, FILE_ORDER, REGISTER_ID, REGISTER_NAME, SYSDATE 				FROM 	TGW_FILE_INFO				WHERE  DOC_ID = :vo.enfDocId				AND    COMP_ID = :vo.originCompId             ]]>            </statement>        </query>                <query id="enforceAccept.insertEnfFileDupDistribute">			<!-- 배부파일정보복제 -->            <statement>            <![CDATA[				INSERT INTO TGW_FILE_INFO ( DOC_ID, COMP_ID, PROCESSOR_ID, TEMP_YN, FILE_ID, FILE_NAME, DISPLAY_NAME, FILE_TYPE, FILE_SIZE, 				        IMAGE_WIDTH, IMAGE_HEIGHT, FILE_ORDER, REGISTER_ID, REGISTER_NAME, REGIST_DATE ) 				SELECT  :vo.docId, COMP_ID, PROCESSOR_ID, TEMP_YN, FILE_ID, FILE_NAME, DISPLAY_NAME, FILE_TYPE, FILE_SIZE, 						IMAGE_WIDTH, IMAGE_HEIGHT, FILE_ORDER, REGISTER_ID, REGISTER_NAME, SYSDATE 				FROM 	TGW_FILE_INFO				WHERE  DOC_ID = :vo.enfDocId				AND    COMP_ID = :vo.originCompId             ]]>            </statement>        </query>        <query id="enforceAccept.insertEnfFileDistToSub">			<!-- 하위기관으로 배부시 배부파일정보복제 -->            <statement>            <![CDATA[				INSERT INTO TGW_FILE_INFO ( DOC_ID, COMP_ID, PROCESSOR_ID, TEMP_YN, FILE_ID, FILE_NAME, DISPLAY_NAME, FILE_TYPE, FILE_SIZE, 				        IMAGE_WIDTH, IMAGE_HEIGHT, FILE_ORDER, REGISTER_ID, REGISTER_NAME, REGIST_DATE ) 				SELECT  :vo.docId, COMP_ID, PROCESSOR_ID, TEMP_YN, FILE_ID, FILE_NAME, DISPLAY_NAME, FILE_TYPE, FILE_SIZE, 						IMAGE_WIDTH, IMAGE_HEIGHT, FILE_ORDER, REGISTER_ID, REGISTER_NAME, SYSDATE 				FROM 	TGW_FILE_INFO				WHERE  DOC_ID = :vo.originDocId				AND    COMP_ID = (SELECT ORIGIN_COMP_ID FROM TGW_ENF_DOC WHERE DOC_ID = :vo.originDocId AND COMP_ID = :vo.originCompId)             ]]>            </statement>        </query>     	<query id="enforceAccept.deleteEnfDocAfterAccept">			<!-- 접수문서정보 모두접수시 삭제 -->            <statement>            <![CDATA[				DELETE TGW_ENF_DOC				WHERE  DOC_ID = :vo.enfDocId				AND    ORIGIN_COMP_ID = :vo.originCompId				AND    1 > (SELECT COUNT( RECEIVER_ORDER )	                        FROM   TGW_ENF_RECV							WHERE  DOC_ID = :vo.enfDocId							AND    COMP_ID = :vo.originCompId )            ]]>            </statement>        </query>     	<query id="enforceAccept.insertEnfDocDistToSub">			<!-- 하위기관 배부시에 배부를 위한  배부문서정보 추가복제 -->            <statement>            <![CDATA[				INSERT INTO TGW_ENF_DOC ( DOC_ID, COMP_ID, ORIGIN_COMP_ID, ORIGIN_DOC_ID, ENF_TYPE, TITLE, DOC_STATE, 					   DOC_NUMBER, DEPT_CATEGORY, SERIAL_NUMBER, SUBSERIAL_NUMBER, 					   ACCEPTER_ID, ACCEPTER_NAME, ACCEPTER_POS, ACCEPT_DEPT_ID, ACCEPT_DEPT_NAME, ACCEPT_DATE, READ_RANGE, CONSERVE_TYPE, RECEIVE_DATE, 					   DISTRIBUTE_YN, DISTRIBUTE_DATE, 					   ELECTRON_DOC_YN, ATTACH_COUNT, DELETE_YN, URGENCY_YN, PUBLIC_POST, 					   BINDING_ID, BINDING_NAME, HANDOVER_YN, MOBILE_YN, TRANSFER_YN, 					   SENDER_ID, SENDER_NAME, SEND_DATE, SEND_OPINION, SENDER_POS, SENDER_DEPT_ID, SENDER_DEPT_NAME, SENDER_COMP_ID, SENDER_COMP_NAME, 					   PROCESSOR_ID, PROCESSOR_NAME, PROCESSOR_POS, PROCESSOR_DEPT_ID, PROCESSOR_DEPT_NAME, OPEN_LEVEL, OPEN_REASON, DISTRIBUTE_NUMBER,					   DOC_TYPE, REGISTER_ID, REGISTER_NAME, REGIST_DATE, LAST_UPDATE_DATE, UNREGIST_YN, 					   ASSISTANT_LINE_TYPE, AUDIT_LINE_TYPE ) 			    SELECT :vo.docId, :vo.compId, :vo.originCompId, :vo.originDocId, ENF_TYPE, TITLE, 'ENF100', 					   DOC_NUMBER, DEPT_CATEGORY, SERIAL_NUMBER, SUBSERIAL_NUMBER, 					   ACCEPTER_ID, ACCEPTER_NAME, ACCEPTER_POS, :vo.acceptDeptId, ACCEPT_DEPT_NAME, TO_DATE('9999-12-31 23:59:59','YYYY-MM-DD HH24:MI:SS'), READ_RANGE, CONSERVE_TYPE, RECEIVE_DATE, 					   :vo.distributeYn, TO_DATE('9999-12-31 23:59:59','YYYY-MM-DD HH24:MI:SS'), 					   ELECTRON_DOC_YN, ATTACH_COUNT, DELETE_YN, URGENCY_YN, PUBLIC_POST, 					   BINDING_ID, BINDING_NAME, HANDOVER_YN, MOBILE_YN, TRANSFER_YN, 					   SENDER_ID, SENDER_NAME, SEND_DATE, SEND_OPINION, SENDER_POS, SENDER_DEPT_ID, SENDER_DEPT_NAME, SENDER_COMP_ID, SENDER_COMP_NAME, 					   PROCESSOR_ID, PROCESSOR_NAME, PROCESSOR_POS, PROCESSOR_DEPT_ID, PROCESSOR_DEPT_NAME, OPEN_LEVEL, OPEN_REASON, :vo.distributeNumber,					   DOC_TYPE, REGISTER_ID, REGISTER_NAME, REGIST_DATE, LAST_UPDATE_DATE, UNREGIST_YN, 					   ASSISTANT_LINE_TYPE, AUDIT_LINE_TYPE				FROM   TGW_ENF_DOC				WHERE  DOC_ID = :vo.originDocId				AND    COMP_ID = :vo.originCompId            ]]>            </statement>        </query>           <query id="enforceAccept.insertEnfRecvOnDistToSub">			<!-- 하위기관 배부시에 배부를 위한  문서수신자정보 추가생성 -->            <statement>            <![CDATA[				INSERT INTO TGW_ENF_RECV ( DOC_ID, COMP_ID, RECEIVER_ORDER, RECEIVER_TYPE, ENF_TYPE, RECV_COMP_ID, 				RECV_DEPT_ID, RECV_DEPT_NAME, RECV_USER_ID, RECV_USER_NAME, RECV_SYMBOL,				REGIST_DATE, RECV_STATE, READ_DATE )				SELECT :vo.docId, :vo.compId, :vo.distributeOrder, RECEIVER_TYPE, ENF_TYPE, RECV_COMP_ID, 				:vo.recvDeptId, :vo.recvDeptName, RECV_USER_ID, RECV_USER_NAME, RECV_SYMBOL,				REGIST_DATE, 'ENF100', TO_DATE('9999-12-31 23:59:59','YYYY-MM-DD HH24:MI:SS') 				FROM TGW_ENF_RECV				WHERE  DOC_ID = :vo.originDocId				AND    RECV_COMP_ID = :vo.compId 				AND	   RECEIVER_ORDER = :vo.distributeOrder				AND    ENF_TYPE = :vo.enfType            ]]>            </statement>        </query>         	<query id="enforceAccept.insertEnfDocDupDistOnSub">			<!-- 하위기관에서 배부시에 상위기관에 배부문서정보 복제 -->            <statement>            <![CDATA[				INSERT INTO TGW_ENF_DOC ( DOC_ID, COMP_ID, ORIGIN_COMP_ID, ORIGIN_DOC_ID, ENF_TYPE, TITLE, DOC_STATE, 					   DOC_NUMBER, DEPT_CATEGORY, SERIAL_NUMBER, SUBSERIAL_NUMBER, 					   ACCEPTER_ID, ACCEPTER_NAME, ACCEPTER_POS, ACCEPT_DEPT_ID, ACCEPT_DEPT_NAME, ACCEPT_DATE, READ_RANGE, CONSERVE_TYPE, RECEIVE_DATE, 					   DISTRIBUTE_YN, DISTRIBUTOR_ID, DISTRIBUTOR_NAME, DISTRIBUTOR_POS, DISTRIBUTOR_DEPT_ID, DISTRIBUTOR_DEPT_NAME, DISTRIBUTE_DATE, 					   ELECTRON_DOC_YN, ATTACH_COUNT, DELETE_YN, URGENCY_YN, PUBLIC_POST, 					   BINDING_ID, BINDING_NAME, HANDOVER_YN, MOBILE_YN, TRANSFER_YN, 					   SENDER_ID, SENDER_NAME, SEND_DATE, SEND_OPINION, SENDER_POS, SENDER_DEPT_ID, SENDER_DEPT_NAME, SENDER_COMP_ID, SENDER_COMP_NAME, 					   PROCESSOR_ID, PROCESSOR_NAME, PROCESSOR_POS, PROCESSOR_DEPT_ID, PROCESSOR_DEPT_NAME, OPEN_LEVEL, OPEN_REASON, DISTRIBUTE_NUMBER,					   DOC_TYPE, REGISTER_ID, REGISTER_NAME, REGIST_DATE, LAST_UPDATE_DATE, UNREGIST_YN, 					   ASSISTANT_LINE_TYPE, AUDIT_LINE_TYPE ) 			    SELECT :vo.docId, :vo.compId, ORIGIN_COMP_ID, ORIGIN_DOC_ID, ENF_TYPE, TITLE, 'ENF200', 					   DOC_NUMBER, DEPT_CATEGORY, SERIAL_NUMBER, 0, 					   :vo.accepterId, :vo.accepterName, :vo.accepterPos, :vo.acceptDeptId, :vo.acceptDeptName, TO_DATE(:vo.acceptDate,'YYYY-MM-DD HH24:MI:SS'), READ_RANGE, CONSERVE_TYPE, RECEIVE_DATE, 					   DISTRIBUTE_YN, DISTRIBUTOR_ID, DISTRIBUTOR_NAME, DISTRIBUTOR_POS, DISTRIBUTOR_DEPT_ID, DISTRIBUTOR_DEPT_NAME, DISTRIBUTE_DATE, 					   ELECTRON_DOC_YN, ATTACH_COUNT, DELETE_YN, URGENCY_YN, PUBLIC_POST, 					   BINDING_ID, BINDING_NAME, HANDOVER_YN, MOBILE_YN, TRANSFER_YN, 					   SENDER_ID, SENDER_NAME, SEND_DATE, SEND_OPINION, SENDER_POS, SENDER_DEPT_ID, SENDER_DEPT_NAME, SENDER_COMP_ID, SENDER_COMP_NAME, 					   PROCESSOR_ID, PROCESSOR_NAME, PROCESSOR_POS, PROCESSOR_DEPT_ID, PROCESSOR_DEPT_NAME, OPEN_LEVEL, OPEN_REASON, DISTRIBUTE_NUMBER,					   DOC_TYPE, :vo.accepterId,:vo.accepterName, TO_DATE(:vo.acceptDate,'YYYY-MM-DD HH24:MI:SS'), sysdate, 'N', 					   ASSISTANT_LINE_TYPE, AUDIT_LINE_TYPE				FROM   TGW_ENF_DOC				WHERE  DOC_ID = :vo.enfDocId				AND    COMP_ID = :vo.originCompId            ]]>            </statement>        </query>             	<query id="enforceAccept.updateEnfRecvDistOnSub">			<!-- 하위기관에서 배부시에 상위기관의 문서수신정보 변경 -->            <statement>            <![CDATA[				UPDATE TGW_ENF_RECV SET					   DOC_ID = :vo.docId, 					   COMP_ID = :vo.compId, 					   RECV_STATE = '' 				WHERE  DOC_ID = :vo.originDocId 				AND    RECV_COMP_ID = :vo.compId				AND	   RECEIVER_ORDER = :vo.receiverOrder            ]]>            </statement>        </query>             	<query id="enforceAccept.updateEnfDocDistOnSub">			<!-- 하위기관에서 배부시에 상위기관 문서ID변경에 따라 하위기관 원본문서ID 변경 -->            <statement>            <![CDATA[				UPDATE TGW_ENF_DOC SET					   ORIGIN_DOC_ID = :vo.docId 				WHERE  ORIGIN_DOC_ID = :vo.originDocId 				AND    COMP_ID = :vo.compId            ]]>            </statement>        </query>        <query id="enforceAccept.deleteFileInfoDistOnSub">			<!-- 하위기관에서 배부시에 상위기관 배부의 마지막 문서일 경우 상위기관 파일정보 삭제 -->            <statement>            <![CDATA[				DELETE FROM TGW_FILE_INFO 				WHERE  DOC_ID = :vo.originDocId				AND    1 > (SELECT COUNT( RECEIVER_ORDER )	                        FROM   TGW_ENF_RECV							WHERE  DOC_ID =  :vo.originDocId							AND    COMP_ID = :vo.originCompId )             ]]>            </statement>        </query>                <query id="enforceAccept.deleteFileInfoAfterAccept">			<!-- 파일정보 모두접수시 삭제 -->            <statement>            <![CDATA[				DELETE FROM TGW_FILE_INFO 				WHERE  DOC_ID = :vo.enfDocId				AND    COMP_ID = :vo.originCompId				AND    1 > (SELECT COUNT( RECEIVER_ORDER )	                        FROM   TGW_ENF_RECV							WHERE  DOC_ID = :vo.enfDocId							AND    COMP_ID = :vo.originCompId )             ]]>            </statement>        </query> 		<query id="enforceAccept.insertOwnDept">			<!-- 소유부서권한 정보 -->            <statement>            <![CDATA[				INSERT INTO TGW_OWN_DEPT 					(					DOC_ID, COMP_ID, OWN_DEPT_ID, OWN_DEPT_NAME, OWN_YN, 					REGIST_DATE					) 				VALUES 					(					:vo.docId, :vo.compId, :vo.ownDeptId, :vo.ownDeptName, :vo.ownYn,					TO_DATE(:vo.registDate,'YYYY-MM-DD HH24:MI:SS')					)             ]]>            </statement>        </query> <!-- 접수/배부 end -->        <!-- 이송/재배부 start -->        <query id="enforceAccept.updateAppRecvMove">			<!-- 생산문서 수신자 정보 업데이트 -->            <statement>            <![CDATA[				UPDATE TGW_APP_RECV SET  				       ENF_STATE       	= :vo.enfState				WHERE  DOC_ID = :vo.docId				AND    COMP_ID = :vo.compId 				AND	   RECEIVER_ORDER = :vo.receiverOrder            ]]>            </statement>        </query>        <query id="enforceAccept.updateEnfRecvMove">			<!-- 접수문서수신자정보변경 -->            <statement>            <![CDATA[				UPDATE TGW_ENF_RECV SET  				 	   RECV_DEPT_ID = :vo.recvDeptId,				 	   RECV_DEPT_NAME = :vo.recvDeptName,				 	   REF_DEPT_ID = :vo.refDeptId,				 	   REF_DEPT_NAME = :vo.refDeptName,				 	   RECV_USER_ID = :vo.recvUserId,				 	   RECV_USER_NAME = :vo.recvUserName,				 	   RECV_SYMBOL = :vo.recvSymbol,				 	   READ_DATE = TO_DATE('9999-12-31 23:59:59','YYYY-MM-DD HH24:MI:SS'),				 	   ENF_TYPE = :vo.enfType				WHERE  DOC_ID = :vo.docId				AND    RECV_COMP_ID = :vo.compId				AND	   RECEIVER_ORDER = :vo.receiverOrder            ]]>            </statement>        </query>        <query id="enforceAccept.insertEnfRecvAddReDist">			<!-- 접수문서수신정보추가(재배부시 추가부서) -->            <statement>            <![CDATA[				INSERT INTO TGW_ENF_RECV ( DOC_ID, COMP_ID, RECEIVER_ORDER, RECEIVER_TYPE, ENF_TYPE, RECV_COMP_ID, 				RECV_DEPT_ID, RECV_DEPT_NAME, REF_DEPT_ID, REF_DEPT_NAME, RECV_USER_ID, RECV_USER_NAME, RECV_SYMBOL,				REGIST_DATE, RECV_STATE, READ_DATE )				SELECT :vo.docId, :vo.compId, :vo.distributeOrder, RECEIVER_TYPE, ENF_TYPE, RECV_COMP_ID, 				RECV_DEPT_ID, RECV_DEPT_NAME, :vo.refDeptId, :vo.refDeptName, RECV_USER_ID, RECV_USER_NAME, RECV_SYMBOL,				REGIST_DATE, :vo.recvState, TO_DATE('9999-12-31 23:59:59','YYYY-MM-DD HH24:MI:SS') 				FROM TGW_ENF_RECV				WHERE  DOC_ID = :vo.docId				AND    RECV_COMP_ID = :vo.compId 				AND	   RECEIVER_ORDER = :vo.receiverOrder            ]]>            </statement>        </query>            <query id="enforceAccept.updateEnfDocMove">			<!-- 하위기관으로 이송시 접수문서 정보 업데이트 -->            <statement>            <![CDATA[				UPDATE TGW_ENF_DOC SET  				       ENF_TYPE       	= :vo.enfType,				       DISTRIBUTE_YN	= :vo.distributeYn				WHERE  DOC_ID = :vo.docId				AND    COMP_ID = :vo.compId             ]]>            </statement>        </query><!-- 이송 end --><!-- 반송 start -->        <query id="enforceAccept.updateAppRecvReturn">			<!-- 생산문서 수신자 정보 업데이트 -->            <statement>            <![CDATA[				UPDATE TGW_APP_RECV SET  				       ACCEPTER_ID      = :vo.accepterId,				       ACCEPTER_NAME    = :vo.accepterName,					   ACCEPTER_POS 	= :vo.accepterPos,					   ACCEPT_DEPT_ID	= :vo.accepterDeptId,					   ACCEPT_DEPT_NAME = :vo.accepterDeptName,					   ACCEPT_DATE 		= TO_DATE(:vo.acceptDate,'YYYY-MM-DD HH24:MI:SS'),				       SEND_OPINION    	= :vo.sendOpinion,				       ENF_STATE       	= 'ECT007'				WHERE  DOC_ID = :vo.docId				AND    COMP_ID = :vo.compId 				AND	   RECEIVER_ORDER = :vo.receiverOrder            ]]>            </statement>        </query>        <query id="enforceAccept.deleteEnfRecv">			<!-- 접수문서수신자정보삭제 -->            <statement>            <![CDATA[				DELETE FROM TGW_ENF_RECV				WHERE  DOC_ID = :vo.docId				AND    RECV_COMP_ID = :vo.compId 				#if ( $vo.receiverOrder != 0 )  					AND RECEIVER_ORDER = :vo.receiverOrder				#end 				            ]]>            </statement>        </query>         		<query id="enforceAccept.deleteEnfDocReturn">			<!-- 접수문서정보 삭제 -->            <statement>            <![CDATA[				DELETE FROM TGW_ENF_DOC 				WHERE  DOC_ID = :vo.docId				AND    COMP_ID = :vo.originCompId  				AND    1 > (SELECT COUNT( RECEIVER_ORDER )	                        FROM   TGW_ENF_RECV							WHERE  DOC_ID =  :vo.docId							AND    COMP_ID = :vo.originCompId )            ]]>            </statement>        </query> 		<query id="enforceAccept.deleteFileInfoReturn">			<!-- 파일정보삭제 -->            <statement>            <![CDATA[				DELETE FROM TGW_FILE_INFO 				WHERE  DOC_ID = :vo.docId				AND    COMP_ID = :vo.originCompId				AND    1 > (SELECT COUNT( RECEIVER_ORDER )	                        FROM   TGW_ENF_RECV							WHERE  DOC_ID =  :vo.docId							AND    COMP_ID = :vo.originCompId )             ]]>            </statement>        </query><!-- 반송 end --><!-- 재배부요청 start -->     	<query id="enforceAccept.updateEnfDocState">			<!-- 접수문서정보 변경(재배부요청) -->            <statement>            <![CDATA[				UPDATE TGW_ENF_DOC SET				       LAST_UPDATE_DATE = sysdate,					   DOC_STATE= :vo.docState  				WHERE  DOC_ID = :vo.docId 				AND    COMP_ID = :vo.compId            ]]>            </statement>        </query>      	<query id="enforceAccept.updateEnfRecvState">			<!-- 접수문서수신정보 변경(재배부요청) -->            <statement>            <![CDATA[				UPDATE TGW_ENF_RECV SET					   RECV_STATE = :vo.recvState, 					   READ_DATE = TO_DATE('9999-12-31 23:59:59','YYYY-MM-DD HH24:MI:SS') 				WHERE  DOC_ID = :vo.docId 				AND    RECV_COMP_ID = :vo.compId				AND	   RECEIVER_ORDER = :vo.receiverOrder            ]]>            </statement>        </query>                <query id="enforceAccept.deleteEnfProc">			<!-- 접수문서수신자정보삭제 -->            <statement>            <![CDATA[				DELETE FROM TGW_ENF_PROC				WHERE  DOC_ID = :vo.docId				AND    COMP_ID = :vo.compId 				#if ( $vo.receiverOrder != 0 )  					AND RECEIVER_ORDER = :vo.receiverOrder				#end             ]]>            </statement>        </query>             	<query id="enforceAccept.updateEnfDocDelete">			<!-- 배부회수문서를 반송이나 재배부요청시 삭제처리(배부대장) -->            <statement>            <![CDATA[				UPDATE TGW_ENF_DOC SET				       DELETE_YN = :vo.deleteYn				WHERE  DOC_ID = :vo.docId 				AND    COMP_ID = :vo.compId            ]]>            </statement>        </query> <!--재배부요청요청 end --><!-- 재발송요청 start -->        <query id="enforceAccept.updateAppRecvReSendRequest">			<!-- 생산문서 수신자 정보 업데이트 . 기타는 반송과 동일 -->            <statement>            <![CDATA[				UPDATE TGW_APP_RECV SET  				       ACCEPTER_ID      = :vo.accepterId,				       ACCEPTER_NAME    = :vo.accepterName,					   ACCEPTER_POS 	= :vo.accepterPos,					   ACCEPT_DEPT_ID	= :vo.accepterDeptId,					   ACCEPT_DEPT_NAME = :vo.accepterDeptName,					   ACCEPT_DATE 		= TO_DATE(:vo.acceptDate,'YYYY-MM-DD HH24:MI:SS'),				       SEND_OPINION    	= :vo.sendOpinion,				       ENF_STATE       	= 'ECT010'				WHERE  DOC_ID = :vo.docId				AND    RECV_COMP_ID = :vo.compId				AND	   RECEIVER_ORDER = :vo.receiverOrder            ]]>            </statement>        </query> <!-- 재발송요청 end -->		<query id="enforceAccept.selectEnfDoc">			<!-- 접수문서 정보 받기 from map -->			<statement>			<![CDATA[				SELECT 					DOC_ID, COMP_ID, ORIGIN_COMP_ID, ORIGIN_DOC_ID, ENF_TYPE, TITLE, DOC_STATE, DOC_NUMBER, DEPT_CATEGORY, SERIAL_NUMBER, SUBSERIAL_NUMBER, 					ACCEPTER_ID, ACCEPTER_NAME, ACCEPTER_POS, ACCEPT_DEPT_ID, ACCEPT_DEPT_NAME, ACCEPT_DATE, 					READ_RANGE, CONSERVE_TYPE, RECEIVE_DATE, DISTRIBUTE_YN, DISTRIBUTOR_ID, DISTRIBUTOR_NAME, 					DISTRIBUTOR_POS, DISTRIBUTOR_DEPT_ID, DISTRIBUTOR_DEPT_NAME, DISTRIBUTE_DATE, ELECTRON_DOC_YN, 					ATTACH_COUNT, DELETE_YN, URGENCY_YN, PUBLIC_POST, BINDING_ID, 					FNC_GET_RESOURCE_NAME(:compId, BINDING_NAME, :langType) AS BINDING_NAME,					BINDING_NAME AS BINDING_RESOURCE_ID, 										HANDOVER_YN, MOBILE_YN, TRANSFER_YN, SENDER_ID, SENDER_NAME, SEND_DATE, SEND_OPINION, 					SENDER_POS, SENDER_DEPT_ID, SENDER_DEPT_NAME, SENDER_COMP_ID, SENDER_COMP_NAME, 					PROCESSOR_ID, PROCESSOR_NAME, PROCESSOR_POS, PROCESSOR_DEPT_ID, PROCESSOR_DEPT_NAME, 					OPEN_LEVEL, OPEN_REASON, DISTRIBUTE_NUMBER, DOC_TYPE, REGISTER_ID, REGISTER_NAME, REGIST_DATE, 					UNREGIST_YN, CLASS_NUMBER, DOCNUM_NAME, ASSISTANT_LINE_TYPE, AUDIT_LINE_TYPE				FROM TGW_ENF_DOC				WHERE DOC_ID = :docId 				#if ( $lobcode.equals("LOB007") || $lobcode.equals("LOB008") || $lobcode.equals("LOB019") || $lobcode.equals("LOB091") || $lobcode.equals("LOB092") )  					AND ORIGIN_COMP_ID = :compId 				#else					AND COMP_ID = :compId 				#end 			]]>			</statement>			<result class="com.sds.acube.app.enforce.vo.EnfDocVO" />		</query>							<query id="enforceAccept.selectEnfDocByAcceptDeptId">			<!-- 20160425 해당 부서의 접수문서 정보 받기 from map -->			<statement>			<![CDATA[				SELECT 					DOC_ID, COMP_ID, ORIGIN_COMP_ID, ORIGIN_DOC_ID, ENF_TYPE, TITLE, DOC_STATE, DOC_NUMBER, DEPT_CATEGORY, SERIAL_NUMBER, SUBSERIAL_NUMBER, 					ACCEPTER_ID, ACCEPTER_NAME, ACCEPTER_POS, ACCEPT_DEPT_ID, ACCEPT_DEPT_NAME, ACCEPT_DATE, 					READ_RANGE, CONSERVE_TYPE, RECEIVE_DATE, DISTRIBUTE_YN, DISTRIBUTOR_ID, DISTRIBUTOR_NAME, 					DISTRIBUTOR_POS, DISTRIBUTOR_DEPT_ID, DISTRIBUTOR_DEPT_NAME, DISTRIBUTE_DATE, ELECTRON_DOC_YN, 					ATTACH_COUNT, DELETE_YN, URGENCY_YN, PUBLIC_POST, BINDING_ID, 					FNC_GET_RESOURCE_NAME(:compId, BINDING_NAME, :langType) AS BINDING_NAME,					BINDING_NAME AS BINDING_RESOURCE_ID, 										HANDOVER_YN, MOBILE_YN, TRANSFER_YN, SENDER_ID, SENDER_NAME, SEND_DATE, SEND_OPINION, 					SENDER_POS, SENDER_DEPT_ID, SENDER_DEPT_NAME, SENDER_COMP_ID, SENDER_COMP_NAME, 					PROCESSOR_ID, PROCESSOR_NAME, PROCESSOR_POS, PROCESSOR_DEPT_ID, PROCESSOR_DEPT_NAME, 					OPEN_LEVEL, OPEN_REASON, DISTRIBUTE_NUMBER, DOC_TYPE, REGISTER_ID, REGISTER_NAME, REGIST_DATE, 					UNREGIST_YN, CLASS_NUMBER, DOCNUM_NAME, ASSISTANT_LINE_TYPE, AUDIT_LINE_TYPE				FROM TGW_ENF_DOC				WHERE ORIGIN_DOC_ID = :originDocId 				AND ACCEPT_DEPT_ID = :acceptDeptId			]]>			</statement>			<result class="com.sds.acube.app.enforce.vo.EnfDocVO" />		</query>			        <query id="enforceAccept.selectEnfRecv">			<!-- 접수문서 수신자(부서) 목록정보 받기 -->            <statement>            <![CDATA[				SELECT DOC_ID, COMP_ID, RECEIVER_ORDER, RECEIVER_TYPE, ENF_TYPE, RECV_COMP_ID, RECV_DEPT_ID, RECV_DEPT_NAME, REF_DEPT_ID, REF_DEPT_NAME, 				       RECV_USER_ID, RECV_USER_NAME, RECV_SYMBOL, RECV_STATE, READ_DATE 				FROM TGW_ENF_RECV 				WHERE  DOC_ID = :docId				AND    RECV_COMP_ID = :compId             ]]>            </statement>			<result class="com.sds.acube.app.enforce.vo.EnfRecvVO" />        </query>        <query id="enforceAccept.selectEnfRecvUser">			<!-- 접수문서 수신자(사용자) 목록정보 받기 -->            <statement>            <![CDATA[				SELECT DOC_ID, COMP_ID, RECEIVER_ORDER, RECEIVER_TYPE, ENF_TYPE, RECV_COMP_ID, RECV_DEPT_ID, RECV_DEPT_NAME, REF_DEPT_ID, REF_DEPT_NAME, 				       RECV_USER_ID, RECV_USER_NAME, RECV_SYMBOL, RECV_STATE, READ_DATE 				FROM TGW_ENF_RECV 				WHERE  DOC_ID = :docId				AND    RECV_COMP_ID = :compId 				AND    RECV_USER_ID = :userId             ]]>            </statement>			<result class="com.sds.acube.app.enforce.vo.EnfRecvVO" />        </query>        <query id="enforceAccept.selectEnfRecvDeptRecv">			<!-- 배부/접수문서 수신자(부서) 목록정보 받기 -->            <statement>            <![CDATA[				SELECT DOC_ID, COMP_ID, RECEIVER_ORDER, RECEIVER_TYPE, ENF_TYPE, RECV_COMP_ID, RECV_DEPT_ID, RECV_DEPT_NAME, REF_DEPT_ID, REF_DEPT_NAME, 				       RECV_USER_ID, RECV_USER_NAME, RECV_SYMBOL, RECV_STATE, READ_DATE 				FROM TGW_ENF_RECV 				WHERE  DOC_ID = :docId				AND    RECV_COMP_ID = :compId 				AND    RECV_DEPT_ID = :deptId             ]]>            </statement>			<result class="com.sds.acube.app.enforce.vo.EnfRecvVO" />        </query>        <query id="enforceAccept.selectEnfRecvDeptRef">			<!-- 접수문서 참조자(부서) 목록정보 받기 -->            <statement>            <![CDATA[				SELECT DOC_ID, COMP_ID, RECEIVER_ORDER, RECEIVER_TYPE, ENF_TYPE, RECV_COMP_ID, RECV_DEPT_ID, RECV_DEPT_NAME, REF_DEPT_ID, REF_DEPT_NAME, 				       RECV_USER_ID, RECV_USER_NAME, RECV_SYMBOL, RECV_STATE, READ_DATE 				FROM TGW_ENF_RECV 				WHERE  DOC_ID = :docId				AND    RECV_COMP_ID = :compId 				AND    REF_DEPT_ID = :deptId             ]]>            </statement>			<result class="com.sds.acube.app.enforce.vo.EnfRecvVO" />        </query>        <query id="enforceAccept.selectEnfRecvOrder">			<!-- 접수문서 수신자 한개 정보 받기 -->            <statement>            <![CDATA[				SELECT DOC_ID, COMP_ID, RECEIVER_ORDER, RECEIVER_TYPE, ENF_TYPE, RECV_COMP_ID, RECV_DEPT_ID, RECV_DEPT_NAME, REF_DEPT_ID, REF_DEPT_NAME, 				       RECV_USER_ID, RECV_USER_NAME, RECV_SYMBOL, RECV_STATE, READ_DATE 				FROM TGW_ENF_RECV 				WHERE  DOC_ID = :docId				AND    RECV_COMP_ID = :compId 				AND	   RECEIVER_ORDER = :receiverOrder            ]]>            </statement>			<result class="com.sds.acube.app.enforce.vo.EnfRecvVO" />        </query>        <query id="enforceAccept.selectEnfRecvMinReceiverOrder">			<!-- 접수문서 최초 배부부서정보(주 배부부서) -->            <statement>            <![CDATA[                SELECT DOC_ID, COMP_ID, RECEIVER_ORDER, RECEIVER_TYPE, ENF_TYPE, RECV_COMP_ID, RECV_DEPT_ID, RECV_DEPT_NAME, REF_DEPT_ID, REF_DEPT_NAME,                        RECV_USER_ID, RECV_USER_NAME, RECV_SYMBOL, RECV_STATE, READ_DATE                 FROM TGW_ENF_RECV                 WHERE  DOC_ID = :vo.docId                AND    RECV_COMP_ID = :vo.compId				AND    RECEIVER_ORDER = (SELECT MIN(A.RECEIVER_ORDER)										 FROM   TGW_ENF_RECV A, TGW_ENF_DOC B 										 WHERE  A.RECV_COMP_ID = :vo.compId										 AND    A.DOC_ID = B.DOC_ID										 AND    A.COMP_ID = B.COMP_ID										 AND    (B.DISTRIBUTE_NUMBER = (SELECT DISTRIBUTE_NUMBER FROM TGW_ENF_DOC WHERE DOC_ID = :vo.docId AND COMP_ID = :vo.compId)										         OR B.DOC_ID = :vo.docId) )            ]]>            </statement>			<result class="com.sds.acube.app.enforce.vo.EnfRecvVO" />        </query>        <query id="enforceAccept.selectEnfRecvMaxReceiverOrder">			<!-- 접수문서 마지막 배부부서정보 -->            <statement>            <![CDATA[                SELECT DOC_ID, COMP_ID, RECEIVER_ORDER, RECEIVER_TYPE, ENF_TYPE, RECV_COMP_ID, RECV_DEPT_ID, RECV_DEPT_NAME, REF_DEPT_ID, REF_DEPT_NAME,                        RECV_USER_ID, RECV_USER_NAME, RECV_SYMBOL, RECV_STATE, READ_DATE                 FROM TGW_ENF_RECV                 WHERE  DOC_ID = :vo.docId                AND    RECV_COMP_ID = :vo.compId				AND    RECEIVER_ORDER = (SELECT MAX(RECEIVER_ORDER)										 FROM   TGW_ENF_PROC 										 WHERE  DOC_ID =  :vo.docId										 AND    RECV_COMP_ID = :vo.compId )            ]]>            </statement>			<result class="com.sds.acube.app.enforce.vo.EnfRecvVO" />        </query>        <query id="enforceAccept.selectEnfDocAcceptChk">			<!-- 접수여부 체크 -->            <statement>            <![CDATA[				SELECT DOC_ID 				FROM TGW_ENF_DOC 				WHERE  DOC_ID = :vo.docId				AND    COMP_ID = :vo.compId				AND    DOC_STATE  ='ENF300'            ]]>            </statement>			<result class="com.sds.acube.app.enforce.vo.EnfDocVO" />        </query>        <query id="enforceAccept.selectLastSendProcOpinion">   			<!-- 최종발송의견 -->            <statement>            <![CDATA[				SELECT COMP_ID, PROC_ORDER, PROC_TYPE, PROCESSOR_ID, PROCESSOR_NAME, TO_CHAR(PROCESS_DATE,'YYYY-MM-DD HH24:MI:SS'), NVL(PROC_OPINION,'') PROC_OPINION				FROM   TGW_SEND_PROC A				WHERE  DOC_ID = ( SELECT ORIGIN_DOC_ID 				                  FROM   TGW_ENF_DOC				                  WHERE  DOC_ID = :vo.docId				                  AND    COMP_ID = :vo.compId )				AND    COMP_ID = :vo.compId				AND    PROC_TYPE  = :vo.procType				AND    PROC_ORDER = (SELECT MAX(PROC_ORDER)									 FROM   TGW_SEND_PROC 									 WHERE  DOC_ID = ( SELECT ORIGIN_DOC_ID 				                  					   FROM   TGW_ENF_DOC				                 					   WHERE  DOC_ID = :vo.docId				                  					   AND    COMP_ID = :vo.compId )									 AND    COMP_ID = :vo.compId									 AND    PROC_TYPE  = :vo.procType									 AND    PROCESS_DATE = ( SELECT A.SEND_DATE FROM TGW_APP_RECV A, TGW_ENF_DOC B 									 						 WHERE B.ORIGIN_COMP_ID = A.COMP_ID 									 						 AND A.DOC_ID = B.ORIGIN_DOC_ID 				                  					   		 AND B.DOC_ID =  :vo.docId                                                        		 AND A.RECEIVER_ORDER= :vo.receiverOrder				                  					         AND A.COMP_ID =  :vo.compId  ))            ]]>            </statement>			<result class="com.sds.acube.app.appcom.vo.SendProcVO" />        </query>        <query id="enforceAccept.selectLastEnfProcOpinion">   			<!-- 재배부요청,이송의견(마지막 이력데이터가 해당 코드일 경우) -->            <statement>            <![CDATA[				SELECT COMP_ID, RECEIVER_ORDER, PROC_ORDER, PROC_TYPE, PROCESSOR_ID, PROCESSOR_NAME, TO_CHAR(PROCESS_DATE,'YYYY-MM-DD HH24:MI:SS'), NVL(PROC_OPINION,'') PROC_OPINION				FROM   TGW_ENF_PROC 				WHERE  DOC_ID =:vo.docId				AND    COMP_ID = :vo.compId				AND    PROC_TYPE  = :vo.procType				AND    RECEIVER_ORDER = :vo.receiverOrder				AND    PROC_ORDER = (SELECT MAX(PROC_ORDER)									 FROM   TGW_ENF_PROC 									 WHERE  DOC_ID =  :vo.docId 									 AND    COMP_ID = :vo.compId									 AND    RECEIVER_ORDER = :vo.receiverOrder )            ]]>            </statement>			<result class="com.sds.acube.app.appcom.vo.EnfProcVO" />        </query>        <query id="enforceAccept.selectEnfProc">   			<!-- 접수이력목록조회 -->            <statement>            <![CDATA[				SELECT COMP_ID, RECEIVER_ORDER, PROC_ORDER, PROC_TYPE, PROCESSOR_ID, PROCESSOR_NAME, TO_CHAR(PROCESS_DATE,'YYYY-MM-DD HH24:MI:SS') PROCESS_DATE, NVL(PROC_OPINION,'') PROC_OPINION				FROM   TGW_ENF_PROC 				WHERE  DOC_ID =:vo.docId				AND    COMP_ID = :vo.compId				AND    RECEIVER_ORDER = :vo.receiverOrder				ORDER  BY PROC_ORDER            ]]>            </statement>			<result class="com.sds.acube.app.appcom.vo.EnfProcVO" />        </query>        <query id="enforceAccept.selectEnfProcForDist">   			<!-- 접수이력목록조회(배부대장용 다중배부이력) -->            <statement>            <![CDATA[				SELECT A.COMP_ID, A.RECEIVER_ORDER, A.PROC_ORDER, A.PROC_TYPE, A.PROCESSOR_ID, A.PROCESSOR_NAME, 				       TO_CHAR(A.PROCESS_DATE,'YYYY-MM-DD HH24:MI:SS') PROCESS_DATE, NVL(A.PROC_OPINION,'') PROC_OPINION,				       B.REF_DEPT_ID, B.REF_DEPT_NAME				FROM   TGW_ENF_PROC A, TGW_ENF_RECV B, TGW_ENF_DOC C                 WHERE  C.ORIGIN_DOC_ID = (SELECT ORIGIN_DOC_ID FROM TGW_ENF_DOC WHERE DOC_ID = :vo.docId AND COMP_ID = :vo.compId)                AND    C.DISTRIBUTE_NUMBER = (SELECT DISTRIBUTE_NUMBER FROM TGW_ENF_DOC WHERE DOC_ID = :vo.docId AND COMP_ID = :vo.compId)                AND    B.RECV_DEPT_ID = (SELECT MAX(RECV_DEPT_ID) FROM TGW_ENF_RECV WHERE DOC_ID = :vo.docId AND RECV_COMP_ID = :vo.compId)				AND    B.RECV_COMP_ID = :vo.compId				AND    A.DOC_ID = B.DOC_ID                AND    B.DOC_ID = C.DOC_ID				AND    A.COMP_ID = B.COMP_ID                AND    B.COMP_ID = C.COMP_ID				AND    A.RECEIVER_ORDER = B.RECEIVER_ORDER				ORDER  BY A.RECEIVER_ORDER, A.PROC_ORDER            ]]>            </statement>			<result class="com.sds.acube.app.appcom.vo.EnfProcVO" />        </query>     	<query id="enforceAccept.updateEnfDocAdmin">			<!-- 접수문서정보 변경(관리자) -->            <statement>            <![CDATA[				UPDATE TGW_ENF_DOC SET				       TITLE = :vo.title,				       CONSERVE_TYPE = :vo.conserveType,				       READ_RANGE = :vo.readRange,				       PUBLIC_POST = :vo.publicPost,				       URGENCY_YN = :vo.urgencyYn,				       BINDING_ID = :vo.bindingId,				       BINDING_NAME = :vo.bindingName,				       CLASS_NUMBER = :vo.classNumber,				       DOCNUM_NAME = :vo.docnumName				WHERE  DOC_ID = :vo.docId 				AND    COMP_ID = :vo.compId            ]]>            </statement>        </query>  		<query id="enforceAccept.updateBodyFileInfo">			<!-- 본문파일정보변경  -->            <statement>            <![CDATA[				UPDATE TGW_FILE_INFO SET					   FILE_ID = :vo.fileId,					   FILE_NAME = :vo.fileName				WHERE  DOC_ID = :vo.docId				AND    COMP_ID = :vo.compId				AND    FILE_TYPE = 'AFT001'             ]]>            </statement>        </query> 		<query id="enforceAccept.updateAttachCnt">			<!-- 본문파일정보변경  -->            <statement>            <![CDATA[				UPDATE TGW_ENF_DOC SET					   ATTACH_COUNT = (SELECT COUNT(FILE_ID) 					   				   FROM   TGW_FILE_INFO									   WHERE  DOC_ID = :docId									   AND    COMP_ID = :compId									   AND	TEMP_YN = 'N'									   AND    FILE_TYPE IN ('AFT004','AFT010'))				WHERE  DOC_ID = :docId				AND    COMP_ID = :compId              ]]>            </statement>        </query>        <query id="enforceAccept.selectEnableDistributeWithdraw">   			<!-- 배부회수가능목록조회(배부대장에서 배부회수) -->            <statement>            <![CDATA[                SELECT A.DOC_ID, A.COMP_ID, A.RECEIVER_ORDER, A.RECEIVER_TYPE, A.ENF_TYPE, A.RECV_COMP_ID, A.RECV_DEPT_ID, A.RECV_DEPT_NAME, A.REF_DEPT_ID, A.REF_DEPT_NAME,                        A.RECV_USER_ID, A.RECV_USER_NAME, A.RECV_SYMBOL, A.RECV_STATE, A.READ_DATE 				FROM   TGW_ENF_RECV A, TGW_ENF_DOC B                 WHERE  A.RECV_STATE = 'ENF200'                AND    B.DISTRIBUTE_NUMBER = (SELECT DISTRIBUTE_NUMBER FROM TGW_ENF_DOC WHERE DOC_ID = :vo.docId AND COMP_ID = :vo.compId)				AND    A.RECV_COMP_ID = :vo.compId                AND    A.DOC_ID = B.DOC_ID                AND    A.COMP_ID = B.COMP_ID				ORDER  BY A.RECEIVER_ORDER            ]]>            </statement>			<result class="com.sds.acube.app.enforce.vo.EnfRecvVO" />        </query>		<query id="enforceAccept.selectEnfDocDistToSub">			<!-- 하위기관에 배부한 배부문서 정보 받기 -->			<statement>			<![CDATA[				SELECT 					DOC_ID, COMP_ID, ORIGIN_COMP_ID, ORIGIN_DOC_ID, ENF_TYPE, TITLE, DOC_STATE, DOC_NUMBER, DEPT_CATEGORY, SERIAL_NUMBER, SUBSERIAL_NUMBER, 					ACCEPTER_ID, ACCEPTER_NAME, ACCEPTER_POS, ACCEPT_DEPT_ID, ACCEPT_DEPT_NAME, ACCEPT_DATE, 					READ_RANGE, CONSERVE_TYPE, RECEIVE_DATE, DISTRIBUTE_YN, DISTRIBUTOR_ID, DISTRIBUTOR_NAME, 					DISTRIBUTOR_POS, DISTRIBUTOR_DEPT_ID, DISTRIBUTOR_DEPT_NAME, DISTRIBUTE_DATE, ELECTRON_DOC_YN, 					ATTACH_COUNT, DELETE_YN, URGENCY_YN, PUBLIC_POST, BINDING_ID, BINDING_NAME, 					HANDOVER_YN, MOBILE_YN, TRANSFER_YN, SENDER_ID, SENDER_NAME, SEND_DATE, SEND_OPINION, 					SENDER_POS, SENDER_DEPT_ID, SENDER_DEPT_NAME, SENDER_COMP_ID, SENDER_COMP_NAME, 					PROCESSOR_ID, PROCESSOR_NAME, PROCESSOR_POS, PROCESSOR_DEPT_ID, PROCESSOR_DEPT_NAME, 					OPEN_LEVEL, OPEN_REASON, DISTRIBUTE_NUMBER, DOC_TYPE, REGISTER_ID, REGISTER_NAME, REGIST_DATE, 					UNREGIST_YN, CLASS_NUMBER, DOCNUM_NAME, ASSISTANT_LINE_TYPE, AUDIT_LINE_TYPE				FROM TGW_ENF_DOC				WHERE ORIGIN_DOC_ID = :vo.originDocId 				AND   ORIGIN_COMP_ID = :vo.originCompId 			]]>			</statement>			<result class="com.sds.acube.app.enforce.vo.EnfDocVO" />		</query>	     	<query id="enforceAccept.updateEnfDocDistToSub">			<!-- 접수자 정보변경(하위기관으로의 배부 및 재배부요청시 상위기관의 접수자 정보 변경) -->            <statement>            <![CDATA[				UPDATE TGW_ENF_DOC SET				       ACCEPTER_ID = :vo.accepterId, 				       ACCEPTER_NAME = :vo.accepterName, 				       ACCEPTER_POS = :vo.accepterPos, 				       ACCEPT_DEPT_ID = :vo.acceptDeptId, 				       ACCEPT_DEPT_NAME = :vo.acceptDeptName, 				       ACCEPT_DATE = TO_DATE(:vo.acceptDate,'YYYY-MM-DD HH24:MI:SS')				WHERE  DOC_ID = :vo.docId 				AND    COMP_ID = :vo.compId            ]]>            </statement>        </query>         <query id="enforceAccept.selectEnableReturnOnDist">   			<!-- 배부대장에서 반송이나 재배부가능목록조회 -->            <statement>            <![CDATA[                SELECT A.DOC_ID, A.COMP_ID, A.RECEIVER_ORDER, A.RECEIVER_TYPE, A.ENF_TYPE, A.RECV_COMP_ID, A.RECV_DEPT_ID, A.RECV_DEPT_NAME, A.REF_DEPT_ID, A.REF_DEPT_NAME,                        A.RECV_USER_ID, A.RECV_USER_NAME, A.RECV_SYMBOL, A.RECV_STATE, A.READ_DATE 				FROM   TGW_ENF_RECV A, TGW_ENF_DOC B                 WHERE  ( A.RECV_STATE NOT IN ('ENF100','ENF110','ENF120') OR A.RECV_STATE IS NULL )                AND    B.DISTRIBUTE_NUMBER = (SELECT DISTRIBUTE_NUMBER FROM TGW_ENF_DOC WHERE DOC_ID = :vo.docId AND COMP_ID = :vo.compId)				AND    A.RECV_COMP_ID = :vo.compId                AND    A.DOC_ID = B.DOC_ID                AND    A.COMP_ID = B.COMP_ID				ORDER  BY A.RECEIVER_ORDER            ]]>            </statement>			<result class="com.sds.acube.app.enforce.vo.EnfRecvVO" />        </query>	</queries></queryservice>